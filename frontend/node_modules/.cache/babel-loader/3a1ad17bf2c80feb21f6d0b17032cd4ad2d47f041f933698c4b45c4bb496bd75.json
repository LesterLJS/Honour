{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erwachens\\\\Desktop\\\\MyProject\\\\frontend\\\\src\\\\pages\\\\Admin\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useImages } from '../../context/ImageContext';\nimport { useAuth } from '../../context/AuthContext';\nimport Navbar from '../../components/common/Navbar';\nimport { normalizeIpfsHash } from '../../util/ipfs';\n\n// Local IPFS gateway URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_GATEWAY = 'http://127.0.0.1:8080/ipfs/';\n\n// Function to get IPFS URL from hash\nconst getIpfsUrl = hash => {\n  const normalizedHash = normalizeIpfsHash(hash);\n  if (!normalizedHash) return '';\n  return `${LOCAL_GATEWAY}${normalizedHash}`;\n};\nconst AdminDashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    allImages,\n    loading,\n    error,\n    getAllImages,\n    deleteImage,\n    getImageDownloadLink,\n    getImageUrl\n  } = useImages();\n  useEffect(() => {\n    // Fetch all images when component mounts\n    getAllImages();\n  }, []);\n\n  // Add state to track loading status of individual images\n  const [imageLoadingStates, setImageLoadingStates] = useState({});\n  const handleDownload = async imageId => {\n    try {\n      setImageLoadingStates(prev => ({\n        ...prev,\n        [imageId]: true\n      }));\n      const response = await getImageDownloadLink(imageId);\n\n      // Get the image from our state\n      const image = allImages.find(img => img.id === imageId);\n      if (!image) {\n        console.error(`Image ${imageId} not found in state`);\n        return;\n      }\n\n      // Get the best available URL (local)\n      let downloadUrl;\n      if (response.ipfsUrls && response.ipfsUrls.local) {\n        downloadUrl = response.ipfsUrls.local;\n        console.log(`Using local URL from response: ${downloadUrl}`);\n      } else {\n        // If no URL is available, construct one from the hash using our utility\n        const hash = image.ipfs_hash;\n        const normalizedHash = normalizeIpfsHash(hash);\n        downloadUrl = normalizedHash ? `${LOCAL_GATEWAY}${normalizedHash}` : '';\n        console.log(`Constructed URL from hash: ${downloadUrl}`);\n      }\n\n      // Create a temporary anchor element to trigger download\n      const link = document.createElement('a');\n      link.href = downloadUrl;\n      link.setAttribute('download', `image-${imageId}.jpg`);\n      link.setAttribute('target', '_blank');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      console.log(`Download initiated for image ${imageId}`);\n    } catch (err) {\n      console.error('Failed to get download link:', err);\n      alert('Failed to download image. Please try again later.');\n    } finally {\n      setImageLoadingStates(prev => ({\n        ...prev,\n        [imageId]: false\n      }));\n    }\n  };\n  const handleDelete = async imageId => {\n    if (window.confirm('Are you sure you want to delete this image?')) {\n      try {\n        await deleteImage(imageId);\n      } catch (err) {\n        console.error('Failed to delete image:', err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Admin Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.username, \"! You have admin privileges.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: \"All Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), !loading && allImages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No images found in the system.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-grid\",\n        children: allImages.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-card\",\n          children: [imageLoadingStates[image.id] ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              height: '200px',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              backgroundColor: '#f0f0f0',\n              borderTopLeftRadius: '8px',\n              borderTopRightRadius: '8px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\",\n              style: {\n                width: '40px',\n                height: '40px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getImageUrl(image.id),\n            alt: `Image ${image.id}`,\n            style: {\n              width: '100%',\n              height: '200px',\n              objectFit: 'cover',\n              borderTopLeftRadius: '8px',\n              borderTopRightRadius: '8px'\n            },\n            onError: e => {\n              console.log(`Image ${image.id} failed to load from backend, trying IPFS gateway...`);\n\n              // Try the IPFS gateway URL\n              const ipfsUrl = getIpfsUrl(image.ipfs_hash);\n              if (ipfsUrl) {\n                e.target.src = ipfsUrl;\n              } else {\n                console.error(`Failed to get valid IPFS URL for image ${image.id}`);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Image #\", image.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hash: \", image.sha256_hash.substring(0, 10), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Uploaded by: User #\", image.uploader]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Uploaded: \", new Date(image.uploaded_at).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Deepfake: \", image.deepfake_label, \" (\", Math.round(image.deepfake_confidence * 100), \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: () => handleDownload(image.id),\n                style: {\n                  marginRight: '10px'\n                },\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => handleDelete(image.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, image.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"9B7tU5TxRdJSH51gQo1eRi+t1xY=\", false, function () {\n  return [useAuth, useImages];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useImages","useAuth","Navbar","normalizeIpfsHash","jsxDEV","_jsxDEV","LOCAL_GATEWAY","getIpfsUrl","hash","normalizedHash","AdminDashboard","_s","user","allImages","loading","error","getAllImages","deleteImage","getImageDownloadLink","getImageUrl","imageLoadingStates","setImageLoadingStates","handleDownload","imageId","prev","response","image","find","img","id","console","downloadUrl","ipfsUrls","local","log","ipfs_hash","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","err","alert","handleDelete","window","confirm","children","fileName","_jsxFileName","lineNumber","columnNumber","className","username","style","marginTop","length","map","width","height","display","alignItems","justifyContent","backgroundColor","borderTopLeftRadius","borderTopRightRadius","src","alt","objectFit","onError","e","ipfsUrl","target","sha256_hash","substring","uploader","Date","uploaded_at","toLocaleString","deepfake_label","Math","round","deepfake_confidence","onClick","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/Erwachens/Desktop/MyProject/frontend/src/pages/Admin/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useImages } from '../../context/ImageContext';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport Navbar from '../../components/common/Navbar';\r\nimport { normalizeIpfsHash } from '../../util/ipfs';\r\n\r\n// Local IPFS gateway URL\r\nconst LOCAL_GATEWAY = 'http://127.0.0.1:8080/ipfs/';\r\n\r\n// Function to get IPFS URL from hash\r\nconst getIpfsUrl = (hash) => {\r\n  const normalizedHash = normalizeIpfsHash(hash);\r\n  if (!normalizedHash) return '';\r\n  return `${LOCAL_GATEWAY}${normalizedHash}`;\r\n};\r\n\r\nconst AdminDashboard = () => {\r\n  const { user } = useAuth();\r\n  const { \r\n    allImages, \r\n    loading, \r\n    error, \r\n    getAllImages, \r\n    deleteImage,\r\n    getImageDownloadLink,\r\n    getImageUrl\r\n  } = useImages();\r\n\r\n  useEffect(() => {\r\n    // Fetch all images when component mounts\r\n    getAllImages();\r\n  }, []);\r\n\r\n  // Add state to track loading status of individual images\r\n  const [imageLoadingStates, setImageLoadingStates] = useState({});\r\n\r\n  const handleDownload = async (imageId) => {\r\n    try {\r\n      setImageLoadingStates(prev => ({ ...prev, [imageId]: true }));\r\n      const response = await getImageDownloadLink(imageId);\r\n      \r\n      // Get the image from our state\r\n      const image = allImages.find(img => img.id === imageId);\r\n      if (!image) {\r\n        console.error(`Image ${imageId} not found in state`);\r\n        return;\r\n      }\r\n      \r\n      // Get the best available URL (local)\r\n      let downloadUrl;\r\n      if (response.ipfsUrls && response.ipfsUrls.local) {\r\n        downloadUrl = response.ipfsUrls.local;\r\n        console.log(`Using local URL from response: ${downloadUrl}`);\r\n      } else {\r\n        // If no URL is available, construct one from the hash using our utility\r\n        const hash = image.ipfs_hash;\r\n        const normalizedHash = normalizeIpfsHash(hash);\r\n        downloadUrl = normalizedHash ? `${LOCAL_GATEWAY}${normalizedHash}` : '';\r\n        console.log(`Constructed URL from hash: ${downloadUrl}`);\r\n      }\r\n      \r\n      // Create a temporary anchor element to trigger download\r\n      const link = document.createElement('a');\r\n      link.href = downloadUrl;\r\n      link.setAttribute('download', `image-${imageId}.jpg`);\r\n      link.setAttribute('target', '_blank');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      \r\n      console.log(`Download initiated for image ${imageId}`);\r\n    } catch (err) {\r\n      console.error('Failed to get download link:', err);\r\n      alert('Failed to download image. Please try again later.');\r\n    } finally {\r\n      setImageLoadingStates(prev => ({ ...prev, [imageId]: false }));\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (imageId) => {\r\n    if (window.confirm('Are you sure you want to delete this image?')) {\r\n      try {\r\n        await deleteImage(imageId);\r\n      } catch (err) {\r\n        console.error('Failed to delete image:', err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      \r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <h2>Admin Dashboard</h2>\r\n          <p>Welcome, {user?.username}! You have admin privileges.</p>\r\n        </div>\r\n        \r\n        <h3 style={{ marginTop: '30px' }}>All Images</h3>\r\n        \r\n        {loading && (\r\n          <div className=\"spinner\"></div>\r\n        )}\r\n        \r\n        {error && (\r\n          <div className=\"alert alert-danger\">{error}</div>\r\n        )}\r\n        \r\n        {!loading && allImages.length === 0 && (\r\n          <div className=\"card\">\r\n            <p>No images found in the system.</p>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"image-grid\">\r\n          {allImages.map((image) => (\r\n            <div key={image.id} className=\"image-card\">\r\n              {imageLoadingStates[image.id] ? (\r\n                <div \r\n                  style={{ \r\n                    width: '100%', \r\n                    height: '200px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    backgroundColor: '#f0f0f0',\r\n                    borderTopLeftRadius: '8px',\r\n                    borderTopRightRadius: '8px'\r\n                  }}\r\n                >\r\n                  <div className=\"spinner\" style={{ width: '40px', height: '40px' }}></div>\r\n                </div>\r\n              ) : (\r\n                <img \r\n                  src={getImageUrl(image.id)}\r\n                  alt={`Image ${image.id}`}\r\n                  style={{ \r\n                    width: '100%', \r\n                    height: '200px', \r\n                    objectFit: 'cover',\r\n                    borderTopLeftRadius: '8px',\r\n                    borderTopRightRadius: '8px'\r\n                  }}\r\n                  onError={(e) => {\r\n                    console.log(`Image ${image.id} failed to load from backend, trying IPFS gateway...`);\r\n                    \r\n                    // Try the IPFS gateway URL\r\n                    const ipfsUrl = getIpfsUrl(image.ipfs_hash);\r\n                    if (ipfsUrl) {\r\n                      e.target.src = ipfsUrl;\r\n                    } else {\r\n                      console.error(`Failed to get valid IPFS URL for image ${image.id}`);\r\n                    }\r\n                  }}\r\n                />\r\n              )}\r\n              \r\n              <div className=\"image-info\">\r\n                <h3>Image #{image.id}</h3>\r\n                <p>Hash: {image.sha256_hash.substring(0, 10)}...</p>\r\n                <p>Uploaded by: User #{image.uploader}</p>\r\n                <p>Uploaded: {new Date(image.uploaded_at).toLocaleString()}</p>\r\n                <p>Deepfake: {image.deepfake_label} ({Math.round(image.deepfake_confidence * 100)}%)</p>\r\n                \r\n                <div className=\"image-actions\">\r\n                  <button \r\n                    className=\"btn\" \r\n                    onClick={() => handleDownload(image.id)}\r\n                    style={{ marginRight: '10px' }}\r\n                  >\r\n                    Download\r\n                  </button>\r\n                  <button \r\n                    className=\"btn btn-danger\" \r\n                    onClick={() => handleDelete(image.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}