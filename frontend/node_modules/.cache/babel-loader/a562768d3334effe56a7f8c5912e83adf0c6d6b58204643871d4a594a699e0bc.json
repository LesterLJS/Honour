{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erwachens\\\\Desktop\\\\MyProject\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { useImages } from '../context/ImageContext';\nimport Navbar from '../components/common/Navbar';\nimport { getIpfsUrl } from '../util/ipfs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    myImages,\n    loading,\n    error,\n    getMyImages,\n    getImageDownloadLink\n  } = useImages();\n  useEffect(() => {\n    // Fetch user's images when component mounts\n    getMyImages();\n  }, []);\n  const handleDownload = async imageId => {\n    try {\n      const response = await getImageDownloadLink(imageId);\n      console.log(`Download link response for image ${imageId}:`, response);\n\n      // Get the image from our state\n      const image = myImages.find(img => img.id === imageId);\n      if (!image) {\n        console.error(`Image ${imageId} not found in state`);\n        return;\n      }\n\n      // Get the best available URL (local or public)\n      let downloadUrl;\n      if (response.ipfsUrls && response.ipfsUrls.local) {\n        downloadUrl = response.ipfsUrls.local;\n        console.log(`Using local URL from response: ${downloadUrl}`);\n      } else if (response.ipfsUrl) {\n        // Fallback to the original URL if the new structure isn't available\n        downloadUrl = response.ipfsUrl;\n        console.log(`Using original URL from response: ${downloadUrl}`);\n      } else {\n        // If no URL is available, construct one from the hash using our utility\n        const hash = response.ipfsHash || image.ipfs_hash;\n        downloadUrl = getIpfsUrl(hash);\n        console.log(`Constructed URL from hash: ${downloadUrl}`);\n      }\n\n      // Create a temporary anchor element to trigger download\n      const link = document.createElement('a');\n      link.href = downloadUrl;\n      link.setAttribute('download', `image-${imageId}.jpg`);\n      link.setAttribute('target', '_blank');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      console.log(`Download initiated for image ${imageId}`);\n    } catch (err) {\n      console.error('Failed to get download link:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Role: \", user === null || user === void 0 ? void 0 : user.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/upload\",\n            className: \"btn\",\n            children: \"Upload New Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/search\",\n            className: \"btn\",\n            style: {\n              marginLeft: '10px'\n            },\n            children: \"Search Similar Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: \"My Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), !loading && myImages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You haven't uploaded any images yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-grid\",\n        children: myImages.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              id: `img-${image.id}`,\n              src: getIpfsUrl(image.ipfs_hash),\n              alt: `ID: ${image.id}`,\n              style: {\n                width: '100%',\n                height: '200px',\n                objectFit: 'cover',\n                borderTopLeftRadius: '8px',\n                borderTopRightRadius: '8px'\n              },\n              onError: e => {\n                // If image fails to load, try to get the download link which will attempt to pin it\n                console.log(`Image ${image.id} failed to load, attempting to pin...`);\n                getImageDownloadLink(image.id).then(response => {\n                  if (response.isPinned) {\n                    console.log(`Image ${image.id} is now pinned, retrying load...`);\n                    // If now pinned, retry loading the image with force reload\n                    e.target.src = getIpfsUrl(image.ipfs_hash, true);\n                  } else {\n                    console.log(`Image ${image.id} is still not pinned, showing placeholder`);\n                    // If still not pinned, show placeholder\n                    e.target.onerror = null;\n                    e.target.src = 'https://via.placeholder.com/300x200?text=Image+Unavailable';\n                  }\n                }).catch(err => {\n                  console.error(`Error getting download link for image ${image.id}:`, err);\n                  // On error, show placeholder\n                  e.target.onerror = null;\n                  e.target.src = 'https://via.placeholder.com/300x200?text=Image+Unavailable';\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                position: 'absolute',\n                top: '5px',\n                right: '5px',\n                background: 'rgba(255, 255, 255, 0.7)',\n                border: 'none',\n                borderRadius: '50%',\n                width: '30px',\n                height: '30px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n              },\n              onClick: () => {\n                // Show loading indicator\n                const imgElement = document.getElementById(`img-${image.id}`);\n                if (imgElement) {\n                  imgElement.style.opacity = '0.5';\n                }\n\n                // Get download link to ensure image is pinned\n                getImageDownloadLink(image.id).then(response => {\n                  console.log(`Refresh requested for image ${image.id}, pin status:`, response.isPinned);\n\n                  // Force reload the image\n                  if (imgElement) {\n                    imgElement.src = getIpfsUrl(image.ipfs_hash, true);\n                    imgElement.style.opacity = '1';\n                  }\n                }).catch(err => {\n                  console.error(`Error refreshing image ${image.id}:`, err);\n                  if (imgElement) {\n                    imgElement.style.opacity = '1';\n                  }\n                });\n              },\n              title: \"Refresh image\",\n              children: \"\\u21BB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Image #\", image.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hash: \", image.sha256_hash.substring(0, 10), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Uploaded: \", new Date(image.uploaded_at).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Deepfake: \", image.deepfake_label, \" (\", Math.round(image.deepfake_confidence * 100), \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: () => handleDownload(image.id),\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, image.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"pSdtROYHtXCPspNoLSece9Te5jk=\", false, function () {\n  return [useAuth, useImages];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","Link","useAuth","useImages","Navbar","getIpfsUrl","jsxDEV","_jsxDEV","Dashboard","_s","user","myImages","loading","error","getMyImages","getImageDownloadLink","handleDownload","imageId","response","console","log","image","find","img","id","downloadUrl","ipfsUrls","local","ipfsUrl","hash","ipfsHash","ipfs_hash","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","username","role","style","marginTop","to","marginLeft","length","map","position","src","alt","width","height","objectFit","borderTopLeftRadius","borderTopRightRadius","onError","e","then","isPinned","target","onerror","catch","top","right","background","border","borderRadius","cursor","display","alignItems","justifyContent","onClick","imgElement","getElementById","opacity","title","sha256_hash","substring","Date","uploaded_at","toLocaleString","deepfake_label","Math","round","deepfake_confidence","_c","$RefreshReg$"],"sources":["C:/Users/Erwachens/Desktop/MyProject/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useImages } from '../context/ImageContext';\r\nimport Navbar from '../components/common/Navbar';\r\nimport { getIpfsUrl } from '../util/ipfs';\r\n\r\nconst Dashboard = () => {\r\n  const { user } = useAuth();\r\n  const { myImages, loading, error, getMyImages, getImageDownloadLink } = useImages();\r\n\r\n  useEffect(() => {\r\n    // Fetch user's images when component mounts\r\n    getMyImages();\r\n  }, []);\r\n\r\n  const handleDownload = async (imageId) => {\r\n    try {\r\n      const response = await getImageDownloadLink(imageId);\r\n      console.log(`Download link response for image ${imageId}:`, response);\r\n      \r\n      // Get the image from our state\r\n      const image = myImages.find(img => img.id === imageId);\r\n      if (!image) {\r\n        console.error(`Image ${imageId} not found in state`);\r\n        return;\r\n      }\r\n      \r\n      // Get the best available URL (local or public)\r\n      let downloadUrl;\r\n      if (response.ipfsUrls && response.ipfsUrls.local) {\r\n        downloadUrl = response.ipfsUrls.local;\r\n        console.log(`Using local URL from response: ${downloadUrl}`);\r\n      } else if (response.ipfsUrl) {\r\n        // Fallback to the original URL if the new structure isn't available\r\n        downloadUrl = response.ipfsUrl;\r\n        console.log(`Using original URL from response: ${downloadUrl}`);\r\n      } else {\r\n        // If no URL is available, construct one from the hash using our utility\r\n        const hash = response.ipfsHash || image.ipfs_hash;\r\n        downloadUrl = getIpfsUrl(hash);\r\n        console.log(`Constructed URL from hash: ${downloadUrl}`);\r\n      }\r\n      \r\n      // Create a temporary anchor element to trigger download\r\n      const link = document.createElement('a');\r\n      link.href = downloadUrl;\r\n      link.setAttribute('download', `image-${imageId}.jpg`);\r\n      link.setAttribute('target', '_blank');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      \r\n      console.log(`Download initiated for image ${imageId}`);\r\n    } catch (err) {\r\n      console.error('Failed to get download link:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      \r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <h2>Welcome, {user?.username}!</h2>\r\n          <p>Role: {user?.role}</p>\r\n          \r\n          <div style={{ marginTop: '20px' }}>\r\n            <Link to=\"/upload\" className=\"btn\">Upload New Image</Link>\r\n            <Link to=\"/search\" className=\"btn\" style={{ marginLeft: '10px' }}>Search Similar Images</Link>\r\n          </div>\r\n        </div>\r\n        \r\n        <h3 style={{ marginTop: '30px' }}>My Images</h3>\r\n        \r\n        {loading && (\r\n          <div className=\"spinner\"></div>\r\n        )}\r\n        \r\n        {error && (\r\n          <div className=\"alert alert-danger\">{error}</div>\r\n        )}\r\n        \r\n        {!loading && myImages.length === 0 && (\r\n          <div className=\"card\">\r\n            <p>You haven't uploaded any images yet.</p>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"image-grid\">\r\n        {myImages.map((image) => (\r\n          <div key={image.id} className=\"image-card\">\r\n\r\n            <div style={{ position: 'relative' }}>\r\n              <img \r\n                id={`img-${image.id}`}\r\n                src={getIpfsUrl(image.ipfs_hash)}\r\n                alt={`ID: ${image.id}`}\r\n                style={{ \r\n                  width: '100%', \r\n                  height: '200px', \r\n                  objectFit: 'cover',\r\n                  borderTopLeftRadius: '8px',\r\n                  borderTopRightRadius: '8px'\r\n                }}\r\n                onError={(e) => {\r\n                  // If image fails to load, try to get the download link which will attempt to pin it\r\n                  console.log(`Image ${image.id} failed to load, attempting to pin...`);\r\n                  getImageDownloadLink(image.id)\r\n                    .then(response => {\r\n                      if (response.isPinned) {\r\n                        console.log(`Image ${image.id} is now pinned, retrying load...`);\r\n                        // If now pinned, retry loading the image with force reload\r\n                        e.target.src = getIpfsUrl(image.ipfs_hash, true);\r\n                      } else {\r\n                        console.log(`Image ${image.id} is still not pinned, showing placeholder`);\r\n                        // If still not pinned, show placeholder\r\n                        e.target.onerror = null;\r\n                        e.target.src = 'https://via.placeholder.com/300x200?text=Image+Unavailable';\r\n                      }\r\n                    })\r\n                    .catch((err) => {\r\n                      console.error(`Error getting download link for image ${image.id}:`, err);\r\n                      // On error, show placeholder\r\n                      e.target.onerror = null;\r\n                      e.target.src = 'https://via.placeholder.com/300x200?text=Image+Unavailable';\r\n                    });\r\n                }}\r\n              />\r\n              {/* Add a refresh button to retry loading the image */}\r\n              <button \r\n                style={{\r\n                  position: 'absolute',\r\n                  top: '5px',\r\n                  right: '5px',\r\n                  background: 'rgba(255, 255, 255, 0.7)',\r\n                  border: 'none',\r\n                  borderRadius: '50%',\r\n                  width: '30px',\r\n                  height: '30px',\r\n                  cursor: 'pointer',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center'\r\n                }}\r\n                onClick={() => {\r\n                  // Show loading indicator\r\n                  const imgElement = document.getElementById(`img-${image.id}`);\r\n                  if (imgElement) {\r\n                    imgElement.style.opacity = '0.5';\r\n                  }\r\n                  \r\n                  // Get download link to ensure image is pinned\r\n                  getImageDownloadLink(image.id)\r\n                    .then((response) => {\r\n                      console.log(`Refresh requested for image ${image.id}, pin status:`, response.isPinned);\r\n                      \r\n                      // Force reload the image\r\n                      if (imgElement) {\r\n                        imgElement.src = getIpfsUrl(image.ipfs_hash, true);\r\n                        imgElement.style.opacity = '1';\r\n                      }\r\n                    })\r\n                    .catch((err) => {\r\n                      console.error(`Error refreshing image ${image.id}:`, err);\r\n                      if (imgElement) {\r\n                        imgElement.style.opacity = '1';\r\n                      }\r\n                    });\r\n                }}\r\n                title=\"Refresh image\"\r\n              >\r\n                ↻\r\n              </button>\r\n            </div>\r\n              \r\n              <div className=\"image-info\">\r\n                <h3>Image #{image.id}</h3>\r\n                <p>Hash: {image.sha256_hash.substring(0, 10)}...</p>\r\n                <p>Uploaded: {new Date(image.uploaded_at).toLocaleString()}</p>\r\n                <p>Deepfake: {image.deepfake_label} ({Math.round(image.deepfake_confidence * 100)}%)</p>\r\n                \r\n                <div className=\"image-actions\">\r\n                  <button \r\n                    className=\"btn\" \r\n                    onClick={() => handleDownload(image.id)}\r\n                  >\r\n                    Download\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}