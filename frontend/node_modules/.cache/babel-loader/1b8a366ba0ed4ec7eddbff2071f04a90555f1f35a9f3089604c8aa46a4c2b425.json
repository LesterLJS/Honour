{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erwachens\\\\Desktop\\\\MyProject\\\\frontend\\\\src\\\\pages\\\\ImageSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useImages } from '../context/ImageContext';\nimport Navbar from '../components/common/Navbar';\nimport { getIpfsUrl } from '../util/ipfs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSearch = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [error, setError] = useState('');\n  const {\n    searchSimilarImages,\n    searchResults,\n    loading,\n    pinImage,\n    unpinImage\n  } = useImages();\n\n  // Pagination state\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(6);\n  const [displayedResults, setDisplayedResults] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n\n  // Update displayed results when search results or pagination changes\n  useEffect(() => {\n    if (searchResults && searchResults.length > 0) {\n      // Calculate total pages\n      const total = Math.ceil(searchResults.length / itemsPerPage);\n      setTotalPages(total);\n\n      // Ensure current page is valid\n      const validPage = Math.min(Math.max(1, currentPage), total);\n      if (validPage !== currentPage) {\n        setCurrentPage(validPage);\n      }\n\n      // Get current page items\n      const startIndex = (validPage - 1) * itemsPerPage;\n      const endIndex = Math.min(startIndex + itemsPerPage, searchResults.length);\n      setDisplayedResults(searchResults.slice(startIndex, endIndex));\n    } else {\n      setDisplayedResults([]);\n      setTotalPages(1);\n      setCurrentPage(1);\n    }\n  }, [searchResults, currentPage, itemsPerPage]);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (!selectedFile) {\n      setFile(null);\n      setPreview(null);\n      return;\n    }\n\n    // Check if file is an image\n    if (!selectedFile.type.startsWith('image/')) {\n      setError('Please select an image file');\n      setFile(null);\n      setPreview(null);\n      return;\n    }\n    setFile(selectedFile);\n    setError('');\n\n    // Create preview\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setPreview(reader.result);\n    };\n    reader.readAsDataURL(selectedFile);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setError('Please select an image to search');\n      return;\n    }\n    try {\n      await searchSimilarImages(file);\n      // The searchSimilarImages function already updates the searchResults state in the ImageContext\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to search for similar images');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Similar Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload an image to find similar images in the database.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              children: \"Select Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"image\",\n              className: \"form-control\",\n              accept: \"image/*\",\n              onChange: handleFileChange,\n              disabled: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '20px',\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: preview,\n              alt: \"Preview\",\n              style: {\n                maxWidth: '100%',\n                maxHeight: '300px',\n                display: 'block',\n                margin: '0 auto',\n                borderRadius: '8px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            disabled: !file || loading,\n            children: loading ? 'Searching...' : 'Search Similar Images'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        style: {\n          marginTop: '30px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), searchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Search Results (\", searchResults.length, \" images found)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-grid\",\n          children: displayedResults.map((result, index) => {\n            const ipfsUrl = getIpfsUrl(result.ipfsHash); // Use the utility function for consistent URLs\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: ipfsUrl,\n                alt: `Similar ${result.id}`,\n                style: {\n                  width: '100%',\n                  height: '200px',\n                  objectFit: 'cover',\n                  borderTopLeftRadius: '8px',\n                  borderTopRightRadius: '8px'\n                },\n                onError: e => {\n                  // If image fails to load, try with force reload first\n                  console.log(`Search result image ${result.id} failed to load, attempting force reload...`);\n\n                  // First try with a force reload (add timestamp to URL)\n                  const forceReloadUrl = getIpfsUrl(result.ipfsHash, true);\n                  console.log(`Trying force reload URL: ${forceReloadUrl}`);\n\n                  // Create a temporary image to test if force reload works\n                  const tempImg = new Image();\n                  tempImg.onload = () => {\n                    console.log(`Force reload successful for image ${result.id}`);\n                    e.target.src = forceReloadUrl;\n                  };\n                  tempImg.onerror = () => {\n                    // If force reload fails, try to pin the image if we have an ID\n                    if (result.id) {\n                      console.log(`Force reload failed for image ${result.id}, trying to pin...`);\n                      pinImage(result.id).then(() => {\n                        console.log(`Pinned image ${result.id}, retrying load...`);\n                        // If pinned, retry loading the image with force reload\n                        e.target.src = getIpfsUrl(result.ipfsHash, true);\n                      }).catch(err => {\n                        console.error(`Error pinning image ${result.id}:`, err);\n                        // On error, show placeholder\n                        e.target.onerror = null;\n                        e.target.src = 'https://via.placeholder.com/300x200?text=Image+Unavailable';\n                      });\n                    } else {\n                      // If no ID available, just show placeholder\n                      console.log(`No ID available for image, showing placeholder`);\n                      e.target.onerror = null;\n                      e.target.src = 'https://via.placeholder.com/300x200?text=Image+Unavailable';\n                    }\n                  };\n                  tempImg.src = forceReloadUrl;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Image #\", result.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"IPFS Hash: \", result.ipfsHash.substring(0, 10), \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Similarity: \", Math.round(result.similarity * 100), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    marginBottom: '10px',\n                    color: result.is_pinned ? '#28a745' : '#dc3545'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      display: 'inline-block',\n                      width: '10px',\n                      height: '10px',\n                      borderRadius: '50%',\n                      backgroundColor: result.is_pinned ? '#28a745' : '#dc3545',\n                      marginRight: '5px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: result.is_pinned ? 'Pinned' : 'Not Pinned'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"btn\",\n                    onClick: async e => {\n                      // Check if local gateway is accessible\n                      e.preventDefault();\n                      window.open(ipfsUrl, '_blank');\n                    },\n                    children: \"View on IPFS\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn\",\n                    style: {\n                      marginLeft: '10px'\n                    },\n                    onClick: async e => {\n                      e.preventDefault();\n\n                      // Always use local gateway\n                      const downloadUrl = ipfsUrl;\n\n                      // Create a temporary anchor element to trigger download\n                      const link = document.createElement('a');\n                      link.href = downloadUrl;\n                      link.setAttribute('download', `image-${result.id}.jpg`);\n                      document.body.appendChild(link);\n                      link.click();\n                      document.body.removeChild(link);\n                    },\n                    children: \"Download\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 25\n                  }, this), result.is_pinned ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn\",\n                    style: {\n                      marginLeft: '10px',\n                      backgroundColor: '#dc3545'\n                    },\n                    onClick: async () => {\n                      try {\n                        await unpinImage(result.id);\n                        alert(`Image #${result.id} has been unpinned.`);\n                        // Refresh search results to update pin status\n                        await searchSimilarImages(file);\n                      } catch (err) {\n                        console.error('Failed to unpin image:', err);\n                        alert('Failed to unpin image. Please try again later.');\n                      }\n                    },\n                    children: \"Unpin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn\",\n                    style: {\n                      marginLeft: '10px',\n                      backgroundColor: '#28a745'\n                    },\n                    onClick: async () => {\n                      try {\n                        await pinImage(result.id);\n                        alert(`Image #${result.id} has been pinned.`);\n                        // Refresh search results to update pin status\n                        await searchSimilarImages(file);\n                      } catch (err) {\n                        console.error('Failed to pin image:', err);\n                        alert('Failed to pin image. Please try again later.');\n                      }\n                    },\n                    children: \"Pin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-controls\",\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            margin: '20px 0 40px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n            disabled: currentPage === 1,\n            style: {\n              margin: '0 5px',\n              opacity: currentPage > 1 ? 1 : 0.5,\n              cursor: currentPage > 1 ? 'pointer' : 'not-allowed'\n            },\n            children: \"\\xAB Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '0 15px'\n            },\n            children: Array.from({\n              length: totalPages\n            }, (_, i) => i + 1).map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentPage(page),\n              style: {\n                margin: '0 5px',\n                padding: '5px 10px',\n                border: page === currentPage ? '2px solid #007bff' : '1px solid #ccc',\n                borderRadius: '4px',\n                background: page === currentPage ? '#e6f2ff' : 'white',\n                cursor: 'pointer'\n              },\n              children: page\n            }, page, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setCurrentPage(prev => Math.min(prev + 1, totalPages)),\n            disabled: currentPage === totalPages,\n            style: {\n              margin: '0 5px',\n              opacity: currentPage < totalPages ? 1 : 0.5,\n              cursor: currentPage < totalPages ? 'pointer' : 'not-allowed'\n            },\n            children: \"Next \\xBB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginBottom: '30px',\n            color: '#666'\n          },\n          children: [\"Showing page \", currentPage, \" of \", totalPages, \" (\", searchResults.length, \" total images)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), searchResults && searchResults.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          marginTop: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No similar images found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageSearch, \"1FU4NKjL4Eq6DNBLcaZNHgESx9s=\", false, function () {\n  return [useImages];\n});\n_c = ImageSearch;\nexport default ImageSearch;\nvar _c;\n$RefreshReg$(_c, \"ImageSearch\");","map":{"version":3,"names":["React","useState","useEffect","useImages","Navbar","getIpfsUrl","jsxDEV","_jsxDEV","ImageSearch","_s","file","setFile","preview","setPreview","error","setError","searchSimilarImages","searchResults","loading","pinImage","unpinImage","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","displayedResults","setDisplayedResults","totalPages","setTotalPages","length","total","Math","ceil","validPage","min","max","startIndex","endIndex","slice","handleFileChange","e","selectedFile","target","files","type","startsWith","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","preventDefault","err","_err$response","_err$response$data","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","id","accept","onChange","disabled","style","marginTop","marginBottom","src","alt","maxWidth","maxHeight","display","margin","borderRadius","map","index","ipfsUrl","ipfsHash","width","height","objectFit","borderTopLeftRadius","borderTopRightRadius","onError","console","log","forceReloadUrl","tempImg","Image","onload","onerror","then","catch","substring","round","similarity","alignItems","color","is_pinned","backgroundColor","marginRight","onClick","window","open","marginLeft","downloadUrl","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","alert","justifyContent","prev","opacity","cursor","Array","from","_","i","page","padding","border","background","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Erwachens/Desktop/MyProject/frontend/src/pages/ImageSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useImages } from '../context/ImageContext';\r\nimport Navbar from '../components/common/Navbar';\r\nimport { getIpfsUrl } from '../util/ipfs';\r\n\r\nconst ImageSearch = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const { searchSimilarImages, searchResults, loading, pinImage, unpinImage } = useImages();\r\n  \r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(6);\r\n  const [displayedResults, setDisplayedResults] = useState([]);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  // Update displayed results when search results or pagination changes\r\n  useEffect(() => {\r\n    if (searchResults && searchResults.length > 0) {\r\n      // Calculate total pages\r\n      const total = Math.ceil(searchResults.length / itemsPerPage);\r\n      setTotalPages(total);\r\n      \r\n      // Ensure current page is valid\r\n      const validPage = Math.min(Math.max(1, currentPage), total);\r\n      if (validPage !== currentPage) {\r\n        setCurrentPage(validPage);\r\n      }\r\n      \r\n      // Get current page items\r\n      const startIndex = (validPage - 1) * itemsPerPage;\r\n      const endIndex = Math.min(startIndex + itemsPerPage, searchResults.length);\r\n      setDisplayedResults(searchResults.slice(startIndex, endIndex));\r\n    } else {\r\n      setDisplayedResults([]);\r\n      setTotalPages(1);\r\n      setCurrentPage(1);\r\n    }\r\n  }, [searchResults, currentPage, itemsPerPage]);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    \r\n    if (!selectedFile) {\r\n      setFile(null);\r\n      setPreview(null);\r\n      return;\r\n    }\r\n    \r\n    // Check if file is an image\r\n    if (!selectedFile.type.startsWith('image/')) {\r\n      setError('Please select an image file');\r\n      setFile(null);\r\n      setPreview(null);\r\n      return;\r\n    }\r\n    \r\n    setFile(selectedFile);\r\n    setError('');\r\n    \r\n    // Create preview\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setPreview(reader.result);\r\n    };\r\n    reader.readAsDataURL(selectedFile);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!file) {\r\n      setError('Please select an image to search');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      await searchSimilarImages(file);\r\n      // The searchSimilarImages function already updates the searchResults state in the ImageContext\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to search for similar images');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      \r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <h2>Search Similar Images</h2>\r\n          <p>Upload an image to find similar images in the database.</p>\r\n          \r\n          {error && (\r\n            <div className=\"alert alert-danger\">{error}</div>\r\n          )}\r\n          \r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"image\">Select Image</label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"image\"\r\n                className=\"form-control\"\r\n                accept=\"image/*\"\r\n                onChange={handleFileChange}\r\n                disabled={loading}\r\n              />\r\n            </div>\r\n            \r\n            {preview && (\r\n              <div style={{ marginTop: '20px', marginBottom: '20px' }}>\r\n                <h3>Preview</h3>\r\n                <img \r\n                  src={preview} \r\n                  alt=\"Preview\" \r\n                  style={{ \r\n                    maxWidth: '100%', \r\n                    maxHeight: '300px', \r\n                    display: 'block',\r\n                    margin: '0 auto',\r\n                    borderRadius: '8px'\r\n                  }} \r\n                />\r\n              </div>\r\n            )}\r\n            \r\n            <button \r\n              type=\"submit\" \r\n              className=\"btn\" \r\n              disabled={!file || loading}\r\n            >\r\n              {loading ? 'Searching...' : 'Search Similar Images'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n        \r\n        {loading && (\r\n          <div className=\"spinner\" style={{ marginTop: '30px' }}></div>\r\n        )}\r\n        \r\n        {searchResults && searchResults.length > 0 && (\r\n          <div style={{ marginTop: '30px' }}>\r\n            <h3>Search Results ({searchResults.length} images found)</h3>\r\n            <div className=\"image-grid\">\r\n              {displayedResults.map((result, index) => {\r\n                const ipfsUrl = getIpfsUrl(result.ipfsHash); // Use the utility function for consistent URLs\r\n                \r\n                return (\r\n                  <div key={index} className=\"image-card\">\r\n                    <img \r\n                      src={ipfsUrl}\r\n                      alt={`Similar ${result.id}`}\r\n                      style={{ \r\n                        width: '100%', \r\n                        height: '200px', \r\n                        objectFit: 'cover',\r\n                        borderTopLeftRadius: '8px',\r\n                        borderTopRightRadius: '8px'\r\n                      }}\r\n                      onError={(e) => {\r\n                        // If image fails to load, try with force reload first\r\n                        console.log(`Search result image ${result.id} failed to load, attempting force reload...`);\r\n                        \r\n                        // First try with a force reload (add timestamp to URL)\r\n                        const forceReloadUrl = getIpfsUrl(result.ipfsHash, true);\r\n                        console.log(`Trying force reload URL: ${forceReloadUrl}`);\r\n                        \r\n                        // Create a temporary image to test if force reload works\r\n                        const tempImg = new Image();\r\n                        tempImg.onload = () => {\r\n                          console.log(`Force reload successful for image ${result.id}`);\r\n                          e.target.src = forceReloadUrl;\r\n                        };\r\n                        tempImg.onerror = () => {\r\n                          // If force reload fails, try to pin the image if we have an ID\r\n                          if (result.id) {\r\n                            console.log(`Force reload failed for image ${result.id}, trying to pin...`);\r\n                            pinImage(result.id)\r\n                              .then(() => {\r\n                                console.log(`Pinned image ${result.id}, retrying load...`);\r\n                                // If pinned, retry loading the image with force reload\r\n                                e.target.src = getIpfsUrl(result.ipfsHash, true);\r\n                              })\r\n                              .catch((err) => {\r\n                                console.error(`Error pinning image ${result.id}:`, err);\r\n                                // On error, show placeholder\r\n                                e.target.onerror = null;\r\n                                e.target.src = 'https://via.placeholder.com/300x200?text=Image+Unavailable';\r\n                              });\r\n                          } else {\r\n                            // If no ID available, just show placeholder\r\n                            console.log(`No ID available for image, showing placeholder`);\r\n                            e.target.onerror = null;\r\n                            e.target.src = 'https://via.placeholder.com/300x200?text=Image+Unavailable';\r\n                          }\r\n                        };\r\n                        tempImg.src = forceReloadUrl;\r\n                      }}\r\n                    />\r\n                    \r\n                    <div className=\"image-info\">\r\n                      <h3>Image #{result.id}</h3>\r\n                      <p>IPFS Hash: {result.ipfsHash.substring(0, 10)}...</p>\r\n                      <p>Similarity: {Math.round(result.similarity * 100)}%</p>\r\n                      \r\n                      {/* Pin status indicator */}\r\n                      <div style={{ \r\n                        display: 'flex', \r\n                        alignItems: 'center', \r\n                        marginBottom: '10px',\r\n                        color: result.is_pinned ? '#28a745' : '#dc3545'\r\n                      }}>\r\n                        <span style={{ \r\n                          display: 'inline-block', \r\n                          width: '10px', \r\n                          height: '10px', \r\n                          borderRadius: '50%', \r\n                          backgroundColor: result.is_pinned ? '#28a745' : '#dc3545',\r\n                          marginRight: '5px'\r\n                        }}></span>\r\n                        <span>{result.is_pinned ? 'Pinned' : 'Not Pinned'}</span>\r\n                      </div>\r\n                      \r\n                      <div className=\"image-actions\">\r\n                        <a \r\n                          className=\"btn\"\r\n                          onClick={async (e) => {\r\n                            // Check if local gateway is accessible\r\n                            e.preventDefault();\r\n                            window.open(ipfsUrl, '_blank');\r\n                          }}\r\n                        >\r\n                          View on IPFS\r\n                        </a>\r\n                        \r\n                        <button \r\n                          className=\"btn\" \r\n                          style={{ marginLeft: '10px' }}\r\n                          onClick={async (e) => {\r\n                            e.preventDefault();\r\n                            \r\n                            // Always use local gateway\r\n                            const downloadUrl = ipfsUrl;\r\n                            \r\n                            // Create a temporary anchor element to trigger download\r\n                            const link = document.createElement('a');\r\n                            link.href = downloadUrl;\r\n                            link.setAttribute('download', `image-${result.id}.jpg`);\r\n                            document.body.appendChild(link);\r\n                            link.click();\r\n                            document.body.removeChild(link);\r\n                          }}\r\n                        >\r\n                          Download\r\n                        </button>\r\n                        \r\n                        {/* Pin/Unpin button */}\r\n                        {result.is_pinned ? (\r\n                          <button \r\n                            className=\"btn\" \r\n                            style={{ marginLeft: '10px', backgroundColor: '#dc3545' }}\r\n                            onClick={async () => {\r\n                              try {\r\n                                await unpinImage(result.id);\r\n                                alert(`Image #${result.id} has been unpinned.`);\r\n                                // Refresh search results to update pin status\r\n                                await searchSimilarImages(file);\r\n                              } catch (err) {\r\n                                console.error('Failed to unpin image:', err);\r\n                                alert('Failed to unpin image. Please try again later.');\r\n                              }\r\n                            }}\r\n                          >\r\n                            Unpin\r\n                          </button>\r\n                        ) : (\r\n                          <button \r\n                            className=\"btn\" \r\n                            style={{ marginLeft: '10px', backgroundColor: '#28a745' }}\r\n                            onClick={async () => {\r\n                              try {\r\n                                await pinImage(result.id);\r\n                                alert(`Image #${result.id} has been pinned.`);\r\n                                // Refresh search results to update pin status\r\n                                await searchSimilarImages(file);\r\n                              } catch (err) {\r\n                                console.error('Failed to pin image:', err);\r\n                                alert('Failed to pin image. Please try again later.');\r\n                              }\r\n                            }}\r\n                          >\r\n                            Pin\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            \r\n            {/* Pagination Controls */}\r\n            {totalPages > 1 && (\r\n              <div className=\"pagination-controls\" style={{ \r\n                display: 'flex', \r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                margin: '20px 0 40px' \r\n              }}>\r\n                <button \r\n                  className=\"btn\" \r\n                  onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))} \r\n                  disabled={currentPage === 1}\r\n                  style={{ \r\n                    margin: '0 5px',\r\n                    opacity: currentPage > 1 ? 1 : 0.5,\r\n                    cursor: currentPage > 1 ? 'pointer' : 'not-allowed'\r\n                  }}\r\n                >\r\n                  &laquo; Previous\r\n                </button>\r\n                \r\n                <div style={{ margin: '0 15px' }}>\r\n                  {/* Page numbers */}\r\n                  {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\r\n                    <button\r\n                      key={page}\r\n                      onClick={() => setCurrentPage(page)}\r\n                      style={{\r\n                        margin: '0 5px',\r\n                        padding: '5px 10px',\r\n                        border: page === currentPage ? '2px solid #007bff' : '1px solid #ccc',\r\n                        borderRadius: '4px',\r\n                        background: page === currentPage ? '#e6f2ff' : 'white',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                    >\r\n                      {page}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                \r\n                <button \r\n                  className=\"btn\" \r\n                  onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))} \r\n                  disabled={currentPage === totalPages}\r\n                  style={{ \r\n                    margin: '0 5px',\r\n                    opacity: currentPage < totalPages ? 1 : 0.5,\r\n                    cursor: currentPage < totalPages ? 'pointer' : 'not-allowed'\r\n                  }}\r\n                >\r\n                  Next &raquo;\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Pagination Info */}\r\n            {totalPages > 1 && (\r\n              <div style={{ textAlign: 'center', marginBottom: '30px', color: '#666' }}>\r\n                Showing page {currentPage} of {totalPages} ({searchResults.length} total images)\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        {searchResults && searchResults.length === 0 && !loading && (\r\n          <div className=\"card\" style={{ marginTop: '30px' }}>\r\n            <p>No similar images found.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}