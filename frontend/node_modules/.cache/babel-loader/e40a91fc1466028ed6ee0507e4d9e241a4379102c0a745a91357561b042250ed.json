{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erwachens\\\\Desktop\\\\MyProject\\\\frontend\\\\src\\\\pages\\\\MFSExplorer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useMFS } from '../context/MFSContext';\nimport MFSBrowser from '../components/mfs/MFSBrowser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MFSExplorer = () => {\n  _s();\n  const {\n    currentPath,\n    write,\n    ls,\n    loading\n  } = useMFS();\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const fileInputRef = useRef(null);\n\n  // Handle file upload\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    const files = fileInputRef.current.files;\n    if (!files || files.length === 0) {\n      setUploadStatus({\n        type: 'error',\n        message: 'No file selected'\n      });\n      return;\n    }\n    setUploadStatus({\n      type: 'info',\n      message: 'Uploading...'\n    });\n    try {\n      // Upload each file\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const path = currentPath === '/' ? `/${file.name}` : `${currentPath}/${file.name}`;\n        await write(path, file);\n        if (i === files.length - 1) {\n          setUploadStatus({\n            type: 'success',\n            message: `${files.length} file(s) uploaded successfully`\n          });\n          // Refresh directory listing\n          ls(currentPath);\n          // Clear file input\n          fileInputRef.current.value = '';\n        }\n      }\n    } catch (err) {\n      console.error('Upload failed:', err);\n      setUploadStatus({\n        type: 'error',\n        message: `Upload failed: ${err.message}`\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mfs-explorer-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mfs-upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload Files to IPFS MFS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFileUpload,\n        className: \"mfs-upload-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          multiple: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: [\"Upload to \", currentPath]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mfs-status mfs-status-${uploadStatus.type}`,\n        children: uploadStatus.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MFSBrowser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .mfs-explorer-page {\n          display: flex;\n          flex-direction: column;\n          height: 100vh;\n          padding: 1rem;\n        }\n        \n        .mfs-upload-section {\n          margin-bottom: 2rem;\n          padding: 1rem;\n          border: 1px solid #ccc;\n          border-radius: 4px;\n          background-color: #f9f9f9;\n        }\n        \n        .mfs-upload-form {\n          display: flex;\n          gap: 1rem;\n          margin-bottom: 1rem;\n        }\n        \n        .mfs-status {\n          padding: 0.5rem;\n          border-radius: 4px;\n        }\n        \n        .mfs-status-success {\n          background-color: #d4edda;\n          color: #155724;\n        }\n        \n        .mfs-status-error {\n          background-color: #f8d7da;\n          color: #721c24;\n        }\n        \n        .mfs-status-info {\n          background-color: #d1ecf1;\n          color: #0c5460;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(MFSExplorer, \"1ddHqlQ5sn05owAlWb7kNn0i2xs=\", false, function () {\n  return [useMFS];\n});\n_c = MFSExplorer;\nexport default MFSExplorer;\nvar _c;\n$RefreshReg$(_c, \"MFSExplorer\");","map":{"version":3,"names":["React","useState","useRef","useMFS","MFSBrowser","jsxDEV","_jsxDEV","MFSExplorer","_s","currentPath","write","ls","loading","uploadStatus","setUploadStatus","fileInputRef","handleFileUpload","e","preventDefault","files","current","length","type","message","i","file","path","name","value","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","multiple","disabled","jsx","_c","$RefreshReg$"],"sources":["C:/Users/Erwachens/Desktop/MyProject/frontend/src/pages/MFSExplorer.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useMFS } from '../context/MFSContext';\r\nimport MFSBrowser from '../components/mfs/MFSBrowser';\r\n\r\nconst MFSExplorer = () => {\r\n  const { currentPath, write, ls, loading } = useMFS();\r\n  const [uploadStatus, setUploadStatus] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Handle file upload\r\n  const handleFileUpload = async (e) => {\r\n    e.preventDefault();\r\n    const files = fileInputRef.current.files;\r\n    \r\n    if (!files || files.length === 0) {\r\n      setUploadStatus({ type: 'error', message: 'No file selected' });\r\n      return;\r\n    }\r\n    \r\n    setUploadStatus({ type: 'info', message: 'Uploading...' });\r\n    \r\n    try {\r\n      // Upload each file\r\n      for (let i = 0; i < files.length; i++) {\r\n        const file = files[i];\r\n        const path = currentPath === '/' ? `/${file.name}` : `${currentPath}/${file.name}`;\r\n        \r\n        await write(path, file);\r\n        \r\n        if (i === files.length - 1) {\r\n          setUploadStatus({ type: 'success', message: `${files.length} file(s) uploaded successfully` });\r\n          // Refresh directory listing\r\n          ls(currentPath);\r\n          // Clear file input\r\n          fileInputRef.current.value = '';\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Upload failed:', err);\r\n      setUploadStatus({ type: 'error', message: `Upload failed: ${err.message}` });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mfs-explorer-page\">\r\n      <div className=\"mfs-upload-section\">\r\n        <h3>Upload Files to IPFS MFS</h3>\r\n        <form onSubmit={handleFileUpload} className=\"mfs-upload-form\">\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            multiple\r\n            disabled={loading}\r\n          />\r\n          <button type=\"submit\" disabled={loading}>\r\n            Upload to {currentPath}\r\n          </button>\r\n        </form>\r\n        \r\n        {uploadStatus && (\r\n          <div className={`mfs-status mfs-status-${uploadStatus.type}`}>\r\n            {uploadStatus.message}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <MFSBrowser />\r\n      \r\n      <style jsx>{`\r\n        .mfs-explorer-page {\r\n          display: flex;\r\n          flex-direction: column;\r\n          height: 100vh;\r\n          padding: 1rem;\r\n        }\r\n        \r\n        .mfs-upload-section {\r\n          margin-bottom: 2rem;\r\n          padding: 1rem;\r\n          border: 1px solid #ccc;\r\n          border-radius: 4px;\r\n          background-color: #f9f9f9;\r\n        }\r\n        \r\n        .mfs-upload-form {\r\n          display: flex;\r\n          gap: 1rem;\r\n          margin-bottom: 1rem;\r\n        }\r\n        \r\n        .mfs-status {\r\n          padding: 0.5rem;\r\n          border-radius: 4px;\r\n        }\r\n        \r\n        .mfs-status-success {\r\n          background-color: #d4edda;\r\n          color: #155724;\r\n        }\r\n        \r\n        .mfs-status-error {\r\n          background-color: #f8d7da;\r\n          color: #721c24;\r\n        }\r\n        \r\n        .mfs-status-info {\r\n          background-color: #d1ecf1;\r\n          color: #0c5460;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MFSExplorer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}