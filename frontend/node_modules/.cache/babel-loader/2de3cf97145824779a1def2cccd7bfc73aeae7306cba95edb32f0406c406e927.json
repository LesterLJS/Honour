{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erwachens\\\\Desktop\\\\MyProject\\\\frontend\\\\src\\\\context\\\\AnalyticsContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { getImageAnalyticsSummary, getDeepfakeDistribution, getUploadTimeline, getUserActivity, getVerificationStats } from '../api/analytics';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnalyticsContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the analytics context\nexport const useAnalytics = () => {\n  _s();\n  return useContext(AnalyticsContext);\n};\n\n// Provider component\n_s(useAnalytics, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AnalyticsProvider = ({\n  children\n}) => {\n  _s2();\n  // State for analytics data\n  const [summary, setSummary] = useState(null);\n  const [deepfakeDistribution, setDeepfakeDistribution] = useState(null);\n  const [uploadTimeline, setUploadTimeline] = useState(null);\n  const [userActivity, setUserActivity] = useState(null);\n  const [verificationStats, setVerificationStats] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch summary analytics\n  const fetchSummary = async (filters = {}) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await getImageAnalyticsSummary(filters);\n      setSummary(data);\n      return data;\n    } catch (err) {\n      setError(err.message || 'Failed to fetch analytics summary');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch deepfake distribution\n  const fetchDeepfakeDistribution = async (filters = {}) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await getDeepfakeDistribution(filters);\n      setDeepfakeDistribution(data);\n      return data;\n    } catch (err) {\n      setError(err.message || 'Failed to fetch deepfake distribution');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch upload timeline\n  const fetchUploadTimeline = async (grouping = 'day') => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await getUploadTimeline(grouping);\n      setUploadTimeline(data);\n      return data;\n    } catch (err) {\n      setError(err.message || 'Failed to fetch upload timeline');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch user activity (admin only)\n  const fetchUserActivity = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await getUserActivity();\n      setUserActivity(data);\n      return data;\n    } catch (err) {\n      setError(err.message || 'Failed to fetch user activity');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch verification stats\n  const fetchVerificationStats = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await getVerificationStats();\n      setVerificationStats(data);\n      return data;\n    } catch (err) {\n      setError(err.message || 'Failed to fetch verification stats');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Clear all analytics data\n  const clearAnalyticsData = () => {\n    setSummary(null);\n    setDeepfakeDistribution(null);\n    setUploadTimeline(null);\n    setUserActivity(null);\n    setVerificationStats(null);\n    setError(null);\n  };\n\n  // Context value\n  const value = {\n    summary,\n    deepfakeDistribution,\n    uploadTimeline,\n    userActivity,\n    verificationStats,\n    loading,\n    error,\n    fetchSummary,\n    fetchDeepfakeDistribution,\n    fetchUploadTimeline,\n    fetchUserActivity,\n    fetchVerificationStats,\n    clearAnalyticsData\n  };\n  return /*#__PURE__*/_jsxDEV(AnalyticsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s2(AnalyticsProvider, \"MUolYAJ1TKMiDu8HSSpvZgwkclw=\");\n_c = AnalyticsProvider;\nexport default AnalyticsContext;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","getImageAnalyticsSummary","getDeepfakeDistribution","getUploadTimeline","getUserActivity","getVerificationStats","jsxDEV","_jsxDEV","AnalyticsContext","useAnalytics","_s","AnalyticsProvider","children","_s2","summary","setSummary","deepfakeDistribution","setDeepfakeDistribution","uploadTimeline","setUploadTimeline","userActivity","setUserActivity","verificationStats","setVerificationStats","loading","setLoading","error","setError","fetchSummary","filters","data","err","message","fetchDeepfakeDistribution","fetchUploadTimeline","grouping","fetchUserActivity","fetchVerificationStats","clearAnalyticsData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Erwachens/Desktop/MyProject/frontend/src/context/AnalyticsContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { \r\n  getImageAnalyticsSummary, \r\n  getDeepfakeDistribution, \r\n  getUploadTimeline, \r\n  getUserActivity, \r\n  getVerificationStats \r\n} from '../api/analytics';\r\n\r\n// Create the context\r\nconst AnalyticsContext = createContext();\r\n\r\n// Custom hook to use the analytics context\r\nexport const useAnalytics = () => useContext(AnalyticsContext);\r\n\r\n// Provider component\r\nexport const AnalyticsProvider = ({ children }) => {\r\n  // State for analytics data\r\n  const [summary, setSummary] = useState(null);\r\n  const [deepfakeDistribution, setDeepfakeDistribution] = useState(null);\r\n  const [uploadTimeline, setUploadTimeline] = useState(null);\r\n  const [userActivity, setUserActivity] = useState(null);\r\n  const [verificationStats, setVerificationStats] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch summary analytics\r\n  const fetchSummary = async (filters = {}) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const data = await getImageAnalyticsSummary(filters);\r\n      setSummary(data);\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch analytics summary');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch deepfake distribution\r\n  const fetchDeepfakeDistribution = async (filters = {}) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const data = await getDeepfakeDistribution(filters);\r\n      setDeepfakeDistribution(data);\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch deepfake distribution');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch upload timeline\r\n  const fetchUploadTimeline = async (grouping = 'day') => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const data = await getUploadTimeline(grouping);\r\n      setUploadTimeline(data);\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch upload timeline');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch user activity (admin only)\r\n  const fetchUserActivity = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const data = await getUserActivity();\r\n      setUserActivity(data);\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch user activity');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch verification stats\r\n  const fetchVerificationStats = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const data = await getVerificationStats();\r\n      setVerificationStats(data);\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch verification stats');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Clear all analytics data\r\n  const clearAnalyticsData = () => {\r\n    setSummary(null);\r\n    setDeepfakeDistribution(null);\r\n    setUploadTimeline(null);\r\n    setUserActivity(null);\r\n    setVerificationStats(null);\r\n    setError(null);\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    summary,\r\n    deepfakeDistribution,\r\n    uploadTimeline,\r\n    userActivity,\r\n    verificationStats,\r\n    loading,\r\n    error,\r\n    fetchSummary,\r\n    fetchDeepfakeDistribution,\r\n    fetchUploadTimeline,\r\n    fetchUserActivity,\r\n    fetchVerificationStats,\r\n    clearAnalyticsData\r\n  };\r\n\r\n  return (\r\n    <AnalyticsContext.Provider value={value}>\r\n      {children}\r\n    </AnalyticsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AnalyticsContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}