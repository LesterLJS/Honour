{"ast":null,"code":"var _jsxFileName = \"F:\\\\MyProject\\\\frontend\\\\src\\\\context\\\\ImageContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback, useRef } from 'react';\nimport { uploadImage as apiUploadImage, getMyImages as apiGetMyImages, getAllImages as apiGetAllImages, deleteImage as apiDeleteImage } from '../api/images';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageContext = /*#__PURE__*/createContext(null);\n\n// Custom hook to use the image context\nexport const useImages = () => {\n  _s();\n  return useContext(ImageContext);\n};\n_s(useImages, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ImageProvider = ({\n  children\n}) => {\n  _s2();\n  const [myImages, setMyImages] = useState([]);\n  const [allImages, setAllImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  ({\n    currentPage: 1,\n    totalPages: 1,\n    totalImages: 0,\n    pageSize: 9,\n    hasNext: false,\n    hasPrevious: false\n  });\n\n  // Upload an image\n  const uploadImage = useCallback(async imageFile => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await apiUploadImage(imageFile);\n      // Add the new image to the myImages array\n      setMyImages(prevImages => [response.data, ...prevImages]);\n      return response.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Image upload failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Admin: Get all images\n  const getAllImages = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await apiGetAllImages();\n      setAllImages(response.data);\n      return response.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Failed to fetch all images');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []); // Add comma here\n\n  // Admin: Delete an image\n  const deleteImage = useCallback(async imageId => {\n    setLoading(true);\n    setError(null);\n    try {\n      await apiDeleteImage(imageId);\n      // Remove the deleted image from state\n      setAllImages(prevImages => prevImages.filter(img => img.id !== imageId));\n      setMyImages(prevImages => prevImages.filter(img => img.id !== imageId));\n      return true;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Failed to delete image');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []); // Add comma here\n\n  // Context value\n  const value = {\n    // Add this line\n    myImages,\n    allImages,\n    loading,\n    error,\n    uploadImage,\n    getAllImages,\n    deleteImage\n  };\n  return /*#__PURE__*/_jsxDEV(ImageContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n};\n_s2(ImageProvider, \"qpGj8p6MHeydrF9Nu/MneME9mk8=\");\n_c = ImageProvider;\nexport default ImageContext;\nvar _c;\n$RefreshReg$(_c, \"ImageProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","useRef","uploadImage","apiUploadImage","getMyImages","apiGetMyImages","getAllImages","apiGetAllImages","deleteImage","apiDeleteImage","jsxDEV","_jsxDEV","ImageContext","useImages","_s","ImageProvider","children","_s2","myImages","setMyImages","allImages","setAllImages","loading","setLoading","error","setError","currentPage","totalPages","totalImages","pageSize","hasNext","hasPrevious","imageFile","response","prevImages","data","err","_err$response","_err$response$data","_err$response2","_err$response2$data","imageId","filter","img","id","_err$response3","_err$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/MyProject/frontend/src/context/ImageContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback, useRef } from 'react';\r\nimport { \r\n  uploadImage as apiUploadImage,\r\n  getMyImages as apiGetMyImages,\r\n  getAllImages as apiGetAllImages,\r\n  deleteImage as apiDeleteImage} from '../api/images';\r\n\r\n// Create the context\r\nconst ImageContext = createContext(null);\r\n\r\n// Custom hook to use the image context\r\nexport const useImages = () => useContext(ImageContext);\r\n\r\nexport const ImageProvider = ({ children }) => {\r\n  const [myImages, setMyImages] = useState([]);\r\n  const [allImages, setAllImages] = useState([]);\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);({\r\n    currentPage: 1,\r\n    totalPages: 1,\r\n    totalImages: 0,\r\n    pageSize: 9,\r\n    hasNext: false,\r\n    hasPrevious: false\r\n  });\r\n  \r\n  \r\n\r\n  // Upload an image\r\n  const uploadImage = useCallback(async (imageFile) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await apiUploadImage(imageFile);\r\n      // Add the new image to the myImages array\r\n      setMyImages(prevImages => [response.data, ...prevImages]);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Image upload failed');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  \r\n// Admin: Get all images\r\nconst getAllImages = useCallback(async () => {\r\n  setLoading(true);\r\n  setError(null);\r\n  try {\r\n    const response = await apiGetAllImages();\r\n    setAllImages(response.data);\r\n    return response.data;\r\n  } catch (err) {\r\n    setError(err.response?.data?.error || 'Failed to fetch all images');\r\n    throw err;\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n}, []); // Add comma here\r\n\r\n// Admin: Delete an image\r\nconst deleteImage = useCallback(async (imageId) => {\r\n  setLoading(true);\r\n  setError(null);\r\n  try {\r\n    await apiDeleteImage(imageId);\r\n    // Remove the deleted image from state\r\n    setAllImages(prevImages => prevImages.filter(img => img.id !== imageId));\r\n    setMyImages(prevImages => prevImages.filter(img => img.id !== imageId));\r\n    return true;\r\n  } catch (err) {\r\n    setError(err.response?.data?.error || 'Failed to delete image');\r\n    throw err;\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n}, []); // Add comma here\r\n\r\n  \r\n  \r\n  // Context value\r\n  const value = {\r\n // Add this line\r\n    myImages,\r\n    allImages,\r\n    loading,\r\n    error,\r\n    uploadImage,\r\n    getAllImages,\r\n    deleteImage,\r\n\r\n  };\r\n\r\n  return <ImageContext.Provider value={value}>{children}</ImageContext.Provider>;\r\n};\r\n\r\nexport default ImageContext;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}