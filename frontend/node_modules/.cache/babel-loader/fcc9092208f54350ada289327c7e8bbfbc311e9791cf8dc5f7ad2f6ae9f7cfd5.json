{"ast":null,"code":"var _jsxFileName = \"F:\\\\MyProject\\\\frontend\\\\src\\\\context\\\\ImageContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback } from 'react';\nimport api from '../api/index'; // Importing the api instance\nimport { uploadImage as apiUploadImage, getMyImages as apiGetMyImages, getAllImages as apiGetAllImages, deleteImage as apiDeleteImage, getImageUrl as apigetImageUrl } from '../api/images';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageContext = /*#__PURE__*/createContext(null);\n\n// Custom hook to use the image context\nexport const useImages = () => {\n  _s();\n  return useContext(ImageContext);\n};\n_s(useImages, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ImageProvider = ({\n  children\n}) => {\n  _s2();\n  const [myImages, setMyImages] = useState([]);\n  const [allImages, setAllImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Upload an image\n  const uploadImage = useCallback(async imageFile => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await apiUploadImage(imageFile);\n      // Add the new image to the myImages array\n      setMyImages(prevImages => [response.data, ...prevImages]);\n      return response.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Image upload failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const getImageUrl = imageId => {\n    return `${api.defaults.baseURL}/api/images/${imageId}/file/?token=${localStorage.getItem('access_token')}`;\n  };\n\n  // Admin: Get all images\n  const getAllImages = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await apiGetAllImages();\n      console.log('Response from getAllImages:', response); // Log the response\n      setAllImages(Array.isArray(response.data.images) ? response.data.images : []); // Set allImages to the images array\n      return response.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Failed to fetch all images');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // User: Get my images\n  const getUserImages = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await apiGetMyImages();\n      setMyImages(response.data);\n      return response.data;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Failed to fetch your images');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Admin: Delete an image\n  const deleteImage = useCallback(async imageId => {\n    setLoading(true);\n    setError(null);\n    try {\n      await apiDeleteImage(imageId);\n      // Remove the deleted image from state\n      setAllImages(prevImages => prevImages.filter(img => img.id !== imageId));\n      setMyImages(prevImages => prevImages.filter(img => img.id !== imageId));\n      return true;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || 'Failed to delete image');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Context value\n  const value = {\n    myImages,\n    allImages,\n    loading,\n    error,\n    uploadImage,\n    getAllImages,\n    getUserImages,\n    deleteImage,\n    getImageUrl: apigetImageUrl\n  };\n  return /*#__PURE__*/_jsxDEV(ImageContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 10\n  }, this);\n};\n_s2(ImageProvider, \"23PZNAOSa88r5ipP7gmlyJVDSsY=\");\n_c = ImageProvider;\nexport default ImageContext;\nvar _c;\n$RefreshReg$(_c, \"ImageProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","api","uploadImage","apiUploadImage","getMyImages","apiGetMyImages","getAllImages","apiGetAllImages","deleteImage","apiDeleteImage","getImageUrl","apigetImageUrl","jsxDEV","_jsxDEV","ImageContext","useImages","_s","ImageProvider","children","_s2","myImages","setMyImages","allImages","setAllImages","loading","setLoading","error","setError","imageFile","response","prevImages","data","err","_err$response","_err$response$data","imageId","defaults","baseURL","localStorage","getItem","console","log","Array","isArray","images","_err$response2","_err$response2$data","getUserImages","_err$response3","_err$response3$data","filter","img","id","_err$response4","_err$response4$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/MyProject/frontend/src/context/ImageContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\r\nimport api from '../api/index'; // Importing the api instance\r\nimport { \r\n  uploadImage as apiUploadImage,\r\n  getMyImages as apiGetMyImages,\r\n  getAllImages as apiGetAllImages,\r\n  deleteImage as apiDeleteImage,\r\n  getImageUrl as apigetImageUrl\r\n} from '../api/images';\r\n\r\n// Create the context\r\nconst ImageContext = createContext(null);\r\n\r\n// Custom hook to use the image context\r\nexport const useImages = () => useContext(ImageContext);\r\n\r\nexport const ImageProvider = ({ children }) => {\r\n  const [myImages, setMyImages] = useState([]);\r\n  const [allImages, setAllImages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Upload an image\r\n  const uploadImage = useCallback(async (imageFile) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await apiUploadImage(imageFile);\r\n      // Add the new image to the myImages array\r\n      setMyImages(prevImages => [response.data, ...prevImages]);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Image upload failed');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const getImageUrl = (imageId) => {\r\n    return `${api.defaults.baseURL}/api/images/${imageId}/file/?token=${localStorage.getItem('access_token')}`;\r\n  };\r\n  \r\n  // Admin: Get all images\r\n  const getAllImages = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await apiGetAllImages(); \r\n      console.log('Response from getAllImages:', response); // Log the response\r\n      setAllImages(Array.isArray(response.data.images) ? response.data.images : []); // Set allImages to the images array\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to fetch all images');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // User: Get my images\r\n  const getUserImages = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await apiGetMyImages();\r\n      setMyImages(response.data);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to fetch your images');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Admin: Delete an image\r\n  const deleteImage = useCallback(async (imageId) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await apiDeleteImage(imageId);\r\n      // Remove the deleted image from state\r\n      setAllImages(prevImages => prevImages.filter(img => img.id !== imageId));\r\n      setMyImages(prevImages => prevImages.filter(img => img.id !== imageId));\r\n      return true;\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to delete image');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Context value\r\n  const value = {\r\n    myImages,\r\n    allImages,\r\n    loading,\r\n    error,\r\n    uploadImage,\r\n    getAllImages,\r\n    getUserImages,\r\n    deleteImage,\r\n    getImageUrl: apigetImageUrl\r\n  };\r\n\r\n  return <ImageContext.Provider value={value}>{children}</ImageContext.Provider>;\r\n};\r\n\r\nexport default ImageContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}