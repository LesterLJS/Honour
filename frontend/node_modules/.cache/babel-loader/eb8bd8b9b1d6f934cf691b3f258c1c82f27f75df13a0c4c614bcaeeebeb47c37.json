{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erwachens\\\\Desktop\\\\MyProject\\\\frontend\\\\src\\\\pages\\\\Analytics.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAnalytics } from '../context/AnalyticsContext';\nimport { useAuth } from '../context/AuthContext';\nimport { Container, Typography, Box, Grid, Paper, Tabs, Tab, CircularProgress, Button, FormControl, InputLabel, Select, MenuItem, TextField } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell, LineChart, Line, AreaChart, Area } from 'recharts';\n\n// Custom colors for charts\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8'];\nconst Analytics = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    summary,\n    deepfakeDistribution,\n    uploadTimeline,\n    userActivity,\n    verificationStats,\n    loading,\n    error,\n    fetchSummary,\n    fetchDeepfakeDistribution,\n    fetchUploadTimeline,\n    fetchUserActivity,\n    fetchVerificationStats\n  } = useAnalytics();\n\n  // State for tab management\n  const [activeTab, setActiveTab] = useState(0);\n\n  // State for filters\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [timeGrouping, setTimeGrouping] = useState('day');\n\n  // Handle tab change\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  // Apply filters\n  const applyFilters = () => {\n    const filters = {};\n    if (startDate) {\n      filters.startDate = startDate.toISOString().split('T')[0];\n    }\n    if (endDate) {\n      filters.endDate = endDate.toISOString().split('T')[0];\n    }\n\n    // Fetch data based on active tab\n    if (activeTab === 0) {\n      fetchSummary(filters);\n    } else if (activeTab === 1) {\n      fetchDeepfakeDistribution(filters);\n    } else if (activeTab === 2) {\n      fetchUploadTimeline(timeGrouping);\n    } else if (activeTab === 3 && user.isAdmin) {\n      fetchUserActivity();\n    } else if (activeTab === 4) {\n      fetchVerificationStats();\n    }\n  };\n\n  // Reset filters\n  const resetFilters = () => {\n    setStartDate(null);\n    setEndDate(null);\n    setTimeGrouping('day');\n\n    // Fetch data without filters\n    if (activeTab === 0) {\n      fetchSummary({});\n    } else if (activeTab === 1) {\n      fetchDeepfakeDistribution({});\n    } else if (activeTab === 2) {\n      fetchUploadTimeline('day');\n    } else if (activeTab === 3 && user.isAdmin) {\n      fetchUserActivity();\n    } else if (activeTab === 4) {\n      fetchVerificationStats();\n    }\n  };\n\n  // Initial data fetch\n  useEffect(() => {\n    // Fetch data based on active tab\n    if (activeTab === 0 && !summary) {\n      fetchSummary({});\n    } else if (activeTab === 1 && !deepfakeDistribution) {\n      fetchDeepfakeDistribution({});\n    } else if (activeTab === 2 && !uploadTimeline) {\n      fetchUploadTimeline('day');\n    } else if (activeTab === 3 && user.isAdmin && !userActivity) {\n      fetchUserActivity();\n    } else if (activeTab === 4 && !verificationStats) {\n      fetchVerificationStats();\n    }\n  }, [activeTab]);\n\n  // Render summary analytics\n  const renderSummary = () => {\n    if (!summary) return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No summary data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 26\n    }, this);\n\n    // Prepare data for pie chart\n    const labelData = [{\n      name: 'Real',\n      value: summary.real_images\n    }, {\n      name: 'Fake',\n      value: summary.fake_images\n    }];\n\n    // Prepare data for confidence distribution\n    const confidenceData = Object.entries(summary.confidence_distribution).map(([range, count]) => ({\n      range,\n      count\n    }));\n\n    // Prepare data for timeline\n    const timelineData = summary.upload_timeline.map(item => ({\n      date: item.date,\n      count: item.count\n    }));\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Summary Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Total Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: summary.total_images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Real Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: summary.real_images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Fake Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: summary.fake_images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Verified Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: summary.verified_images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Real vs Fake Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: labelData,\n                cx: \"50%\",\n                cy: \"50%\",\n                labelLine: false,\n                outerRadius: 80,\n                fill: \"#8884d8\",\n                dataKey: \"value\",\n                label: ({\n                  name,\n                  percent\n                }) => `${name}: ${(percent * 100).toFixed(0)}%`,\n                children: labelData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Confidence Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: confidenceData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"count\",\n                fill: \"#8884d8\",\n                name: \"Image Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Upload Timeline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(AreaChart, {\n              data: timelineData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Area, {\n                type: \"monotone\",\n                dataKey: \"count\",\n                fill: \"#8884d8\",\n                stroke: \"#8884d8\",\n                name: \"Uploads\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render deepfake distribution\n  const renderDeepfakeDistribution = () => {\n    if (!deepfakeDistribution) return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No deepfake distribution data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 39\n    }, this);\n\n    // Prepare data for confidence distribution\n    const confidenceData = Object.entries(deepfakeDistribution.confidence_distribution).map(([range, count]) => ({\n      range,\n      count\n    }));\n\n    // Prepare data for label distribution\n    const labelData = Object.entries(deepfakeDistribution.label_distribution).map(([label, count]) => ({\n      name: label,\n      value: count\n    }));\n\n    // Prepare data for verification distribution\n    const verificationData = Object.entries(deepfakeDistribution.verification_distribution).map(([status, count]) => ({\n      name: status,\n      value: count\n    }));\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Deepfake Detection Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Total Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: deepfakeDistribution.statistics.total_images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Real Avg Confidence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: [(deepfakeDistribution.statistics.real_avg_confidence * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Fake Avg Confidence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: [(deepfakeDistribution.statistics.fake_avg_confidence * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Detailed Confidence Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: confidenceData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"count\",\n                fill: \"#8884d8\",\n                name: \"Image Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Label Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: labelData,\n                cx: \"50%\",\n                cy: \"50%\",\n                labelLine: false,\n                outerRadius: 80,\n                fill: \"#8884d8\",\n                dataKey: \"value\",\n                label: ({\n                  name,\n                  percent\n                }) => `${name}: ${(percent * 100).toFixed(0)}%`,\n                children: labelData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Verification Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: verificationData,\n                cx: \"50%\",\n                cy: \"50%\",\n                labelLine: false,\n                outerRadius: 80,\n                fill: \"#8884d8\",\n                dataKey: \"value\",\n                label: ({\n                  name,\n                  percent\n                }) => `${name}: ${(percent * 100).toFixed(0)}%`,\n                children: verificationData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render upload timeline\n  const renderUploadTimeline = () => {\n    if (!uploadTimeline) return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No upload timeline data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 33\n    }, this);\n\n    // Prepare data for timeline\n    const timelineData = uploadTimeline.timeline.map(item => ({\n      period: item.period,\n      total: item.count,\n      real: item.real_count,\n      fake: item.fake_count\n    }));\n\n    // Prepare data for cumulative timeline\n    const cumulativeData = uploadTimeline.cumulative.map(item => ({\n      period: item.period,\n      total: item.cumulative_count,\n      real: item.cumulative_real,\n      fake: item.cumulative_fake\n    }));\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 400\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: [\"Upload Timeline (\", uploadTimeline.grouping, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: timelineData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"period\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"real\",\n                stackId: \"a\",\n                fill: \"#00C49F\",\n                name: \"Real Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"fake\",\n                stackId: \"a\",\n                fill: \"#FF8042\",\n                name: \"Fake Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 400\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Cumulative Upload Timeline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: cumulativeData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"period\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"total\",\n                stroke: \"#8884d8\",\n                name: \"Total Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"real\",\n                stroke: \"#00C49F\",\n                name: \"Real Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"fake\",\n                stroke: \"#FF8042\",\n                name: \"Fake Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render user activity (admin only)\n  const renderUserActivity = () => {\n    if (!user.isAdmin) return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Admin access required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 31\n    }, this);\n    if (!userActivity) return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No user activity data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 31\n    }, this);\n\n    // Prepare data for user image counts\n    const userData = userActivity.users.map(user => ({\n      username: user.username,\n      imageCount: user.image_count,\n      realCount: user.real_count,\n      fakeCount: user.fake_count,\n      verifiedCount: user.verified_count\n    })).slice(0, 10); // Limit to top 10 users\n\n    // Prepare data for registration timeline\n    const registrationData = userActivity.registration_timeline.map(item => ({\n      date: item.date,\n      count: item.count\n    }));\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"User Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Total Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: userActivity.statistics.total_users\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Active Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: userActivity.statistics.active_users\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Total Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: userActivity.statistics.total_images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Images per User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: userActivity.statistics.images_per_user.toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 400\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Top 10 Users by Image Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: userData,\n              layout: \"vertical\",\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                type: \"number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                dataKey: \"username\",\n                type: \"category\",\n                width: 100\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"realCount\",\n                stackId: \"a\",\n                fill: \"#00C49F\",\n                name: \"Real Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"fakeCount\",\n                stackId: \"a\",\n                fill: \"#FF8042\",\n                name: \"Fake Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"User Registration Timeline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(AreaChart, {\n              data: registrationData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Area, {\n                type: \"monotone\",\n                dataKey: \"count\",\n                fill: \"#8884d8\",\n                stroke: \"#8884d8\",\n                name: \"New Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render verification stats\n  const renderVerificationStats = () => {\n    if (!verificationStats) return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No verification stats available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 36\n    }, this);\n\n    // Prepare data for verification distribution\n    const verificationData = [{\n      name: 'Verified',\n      value: verificationStats.verified_images\n    }, {\n      name: 'Unverified',\n      value: verificationStats.unverified_images\n    }];\n\n    // Prepare data for verification by label\n    const labelVerificationData = [{\n      name: 'Real',\n      verified: verificationStats.by_label.real.verified,\n      unverified: verificationStats.by_label.real.unverified\n    }, {\n      name: 'Fake',\n      verified: verificationStats.by_label.fake.verified,\n      unverified: verificationStats.by_label.fake.unverified\n    }];\n\n    // Prepare data for verification by confidence\n    const confidenceVerificationData = Object.entries(verificationStats.by_confidence).map(([range, data]) => ({\n      range,\n      verified: data.verified,\n      unverified: data.unverified\n    }));\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Verification Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Total Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: verificationStats.total_images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Verified Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: verificationStats.verified_images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Unverified Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: verificationStats.unverified_images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Verification Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: [(verificationStats.verification_rate * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Verification Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: verificationData,\n                cx: \"50%\",\n                cy: \"50%\",\n                labelLine: false,\n                outerRadius: 80,\n                fill: \"#8884d8\",\n                dataKey: \"value\",\n                label: ({\n                  name,\n                  percent\n                }) => `${name}: ${(percent * 100).toFixed(0)}%`,\n                children: verificationData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Verification by Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: labelVerificationData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"verified\",\n                fill: \"#00C49F\",\n                name: \"Verified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"unverified\",\n                fill: \"#FF8042\",\n                name: \"Unverified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Verification by Confidence Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: confidenceVerificationData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"verified\",\n                fill: \"#00C49F\",\n                name: \"Verified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"unverified\",\n                fill: \"#FF8042\",\n                name: \"Unverified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Image Analytics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Start Date\",\n              value: startDate,\n              onChange: newValue => setStartDate(newValue),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"End Date\",\n              value: endDate,\n              onChange: newValue => setEndDate(newValue),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this), activeTab === 2 && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Time Grouping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: timeGrouping,\n              label: \"Time Grouping\",\n              onChange: e => setTimeGrouping(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"day\",\n                children: \"Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"week\",\n                children: \"Week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"month\",\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: applyFilters,\n            fullWidth: true,\n            children: \"Apply Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: resetFilters,\n            fullWidth: true,\n            children: \"Reset Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: activeTab,\n        onChange: handleTabChange,\n        indicatorColor: \"primary\",\n        textColor: \"primary\",\n        variant: \"scrollable\",\n        scrollButtons: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Deepfake Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Upload Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this), user.isAdmin && /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"User Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Verification Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          p: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [activeTab === 0 && renderSummary(), activeTab === 1 && renderDeepfakeDistribution(), activeTab === 2 && renderUploadTimeline(), activeTab === 3 && renderUserActivity(), activeTab === 4 && renderVerificationStats()]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 606,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"qSOND2r/0KjLRK4KMkRSLU46xaE=\", false, function () {\n  return [useAuth, useAnalytics];\n});\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useEffect","useState","useAnalytics","useAuth","Container","Typography","Box","Grid","Paper","Tabs","Tab","CircularProgress","Button","FormControl","InputLabel","Select","MenuItem","TextField","DatePicker","AdapterDateFns","LocalizationProvider","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","PieChart","Pie","Cell","LineChart","Line","AreaChart","Area","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","Analytics","_s","user","summary","deepfakeDistribution","uploadTimeline","userActivity","verificationStats","loading","error","fetchSummary","fetchDeepfakeDistribution","fetchUploadTimeline","fetchUserActivity","fetchVerificationStats","activeTab","setActiveTab","startDate","setStartDate","endDate","setEndDate","timeGrouping","setTimeGrouping","handleTabChange","event","newValue","applyFilters","filters","toISOString","split","isAdmin","resetFilters","renderSummary","children","fileName","_jsxFileName","lineNumber","columnNumber","labelData","name","value","real_images","fake_images","confidenceData","Object","entries","confidence_distribution","map","range","count","timelineData","upload_timeline","item","date","container","spacing","xs","sx","p","variant","gutterBottom","total_images","verified_images","md","height","width","data","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","toFixed","entry","index","length","strokeDasharray","type","stroke","renderDeepfakeDistribution","label_distribution","verificationData","verification_distribution","status","statistics","real_avg_confidence","fake_avg_confidence","renderUploadTimeline","timeline","period","total","real","real_count","fake","fake_count","cumulativeData","cumulative","cumulative_count","cumulative_real","cumulative_fake","grouping","stackId","renderUserActivity","userData","users","username","imageCount","image_count","realCount","fakeCount","verifiedCount","verified_count","slice","registrationData","registration_timeline","total_users","active_users","images_per_user","layout","renderVerificationStats","unverified_images","labelVerificationData","verified","by_label","unverified","confidenceVerificationData","by_confidence","verification_rate","maxWidth","mt","mb","alignItems","dateAdapter","onChange","renderInput","params","fullWidth","e","target","color","onClick","indicatorColor","textColor","scrollButtons","display","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/Erwachens/Desktop/MyProject/frontend/src/pages/Analytics.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useAnalytics } from '../context/AnalyticsContext';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { \r\n  Container, Typography, Box, Grid, Paper, \r\n  Tabs, Tab, CircularProgress, Button, \r\n  FormControl, InputLabel, Select, MenuItem,\r\n  TextField\r\n} from '@mui/material';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n  PieChart, Pie, Cell, LineChart, Line, AreaChart, Area\r\n} from 'recharts';\r\n\r\n// Custom colors for charts\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8'];\r\n\r\nconst Analytics = () => {\r\n  const { user } = useAuth();\r\n  const { \r\n    summary, deepfakeDistribution, uploadTimeline, userActivity, verificationStats,\r\n    loading, error, fetchSummary, fetchDeepfakeDistribution, fetchUploadTimeline,\r\n    fetchUserActivity, fetchVerificationStats\r\n  } = useAnalytics();\r\n\r\n  // State for tab management\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  \r\n  // State for filters\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [timeGrouping, setTimeGrouping] = useState('day');\r\n\r\n  // Handle tab change\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  // Apply filters\r\n  const applyFilters = () => {\r\n    const filters = {};\r\n    if (startDate) {\r\n      filters.startDate = startDate.toISOString().split('T')[0];\r\n    }\r\n    if (endDate) {\r\n      filters.endDate = endDate.toISOString().split('T')[0];\r\n    }\r\n    \r\n    // Fetch data based on active tab\r\n    if (activeTab === 0) {\r\n      fetchSummary(filters);\r\n    } else if (activeTab === 1) {\r\n      fetchDeepfakeDistribution(filters);\r\n    } else if (activeTab === 2) {\r\n      fetchUploadTimeline(timeGrouping);\r\n    } else if (activeTab === 3 && user.isAdmin) {\r\n      fetchUserActivity();\r\n    } else if (activeTab === 4) {\r\n      fetchVerificationStats();\r\n    }\r\n  };\r\n\r\n  // Reset filters\r\n  const resetFilters = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setTimeGrouping('day');\r\n    \r\n    // Fetch data without filters\r\n    if (activeTab === 0) {\r\n      fetchSummary({});\r\n    } else if (activeTab === 1) {\r\n      fetchDeepfakeDistribution({});\r\n    } else if (activeTab === 2) {\r\n      fetchUploadTimeline('day');\r\n    } else if (activeTab === 3 && user.isAdmin) {\r\n      fetchUserActivity();\r\n    } else if (activeTab === 4) {\r\n      fetchVerificationStats();\r\n    }\r\n  };\r\n\r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    // Fetch data based on active tab\r\n    if (activeTab === 0 && !summary) {\r\n      fetchSummary({});\r\n    } else if (activeTab === 1 && !deepfakeDistribution) {\r\n      fetchDeepfakeDistribution({});\r\n    } else if (activeTab === 2 && !uploadTimeline) {\r\n      fetchUploadTimeline('day');\r\n    } else if (activeTab === 3 && user.isAdmin && !userActivity) {\r\n      fetchUserActivity();\r\n    } else if (activeTab === 4 && !verificationStats) {\r\n      fetchVerificationStats();\r\n    }\r\n  }, [activeTab]);\r\n\r\n  // Render summary analytics\r\n  const renderSummary = () => {\r\n    if (!summary) return <Typography>No summary data available</Typography>;\r\n\r\n    // Prepare data for pie chart\r\n    const labelData = [\r\n      { name: 'Real', value: summary.real_images },\r\n      { name: 'Fake', value: summary.fake_images }\r\n    ];\r\n\r\n    // Prepare data for confidence distribution\r\n    const confidenceData = Object.entries(summary.confidence_distribution).map(([range, count]) => ({\r\n      range,\r\n      count\r\n    }));\r\n\r\n    // Prepare data for timeline\r\n    const timelineData = summary.upload_timeline.map(item => ({\r\n      date: item.date,\r\n      count: item.count\r\n    }));\r\n\r\n    return (\r\n      <Grid container spacing={3}>\r\n        {/* Summary statistics */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Summary Statistics</Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"subtitle1\">Total Images</Typography>\r\n                <Typography variant=\"h4\">{summary.total_images}</Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"subtitle1\">Real Images</Typography>\r\n                <Typography variant=\"h4\">{summary.real_images}</Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"subtitle1\">Fake Images</Typography>\r\n                <Typography variant=\"h4\">{summary.fake_images}</Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"subtitle1\">Verified Images</Typography>\r\n                <Typography variant=\"h4\">{summary.verified_images}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Real vs Fake Distribution */}\r\n        <Grid item xs={12} md={6}>\r\n          <Paper sx={{ p: 2, height: 300 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Real vs Fake Distribution</Typography>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n              <PieChart>\r\n                <Pie\r\n                  data={labelData}\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  labelLine={false}\r\n                  outerRadius={80}\r\n                  fill=\"#8884d8\"\r\n                  dataKey=\"value\"\r\n                  label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n                >\r\n                  {labelData.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Confidence Distribution */}\r\n        <Grid item xs={12} md={6}>\r\n          <Paper sx={{ p: 2, height: 300 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Confidence Distribution</Typography>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n              <BarChart data={confidenceData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"range\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"count\" fill=\"#8884d8\" name=\"Image Count\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Upload Timeline */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2, height: 300 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Upload Timeline</Typography>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n              <AreaChart data={timelineData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Area type=\"monotone\" dataKey=\"count\" fill=\"#8884d8\" stroke=\"#8884d8\" name=\"Uploads\" />\r\n              </AreaChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  // Render deepfake distribution\r\n  const renderDeepfakeDistribution = () => {\r\n    if (!deepfakeDistribution) return <Typography>No deepfake distribution data available</Typography>;\r\n\r\n    // Prepare data for confidence distribution\r\n    const confidenceData = Object.entries(deepfakeDistribution.confidence_distribution).map(([range, count]) => ({\r\n      range,\r\n      count\r\n    }));\r\n\r\n    // Prepare data for label distribution\r\n    const labelData = Object.entries(deepfakeDistribution.label_distribution).map(([label, count]) => ({\r\n      name: label,\r\n      value: count\r\n    }));\r\n\r\n    // Prepare data for verification distribution\r\n    const verificationData = Object.entries(deepfakeDistribution.verification_distribution).map(([status, count]) => ({\r\n      name: status,\r\n      value: count\r\n    }));\r\n\r\n    return (\r\n      <Grid container spacing={3}>\r\n        {/* Statistics */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Deepfake Detection Statistics</Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4}>\r\n                <Typography variant=\"subtitle1\">Total Images</Typography>\r\n                <Typography variant=\"h4\">{deepfakeDistribution.statistics.total_images}</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography variant=\"subtitle1\">Real Avg Confidence</Typography>\r\n                <Typography variant=\"h4\">{(deepfakeDistribution.statistics.real_avg_confidence * 100).toFixed(1)}%</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography variant=\"subtitle1\">Fake Avg Confidence</Typography>\r\n                <Typography variant=\"h4\">{(deepfakeDistribution.statistics.fake_avg_confidence * 100).toFixed(1)}%</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Detailed Confidence Distribution */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2, height: 300 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Detailed Confidence Distribution</Typography>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n              <BarChart data={confidenceData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"range\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"count\" fill=\"#8884d8\" name=\"Image Count\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Label Distribution */}\r\n        <Grid item xs={12} md={6}>\r\n          <Paper sx={{ p: 2, height: 300 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Label Distribution</Typography>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n              <PieChart>\r\n                <Pie\r\n                  data={labelData}\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  labelLine={false}\r\n                  outerRadius={80}\r\n                  fill=\"#8884d8\"\r\n                  dataKey=\"value\"\r\n                  label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n                >\r\n                  {labelData.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Verification Distribution */}\r\n        <Grid item xs={12} md={6}>\r\n          <Paper sx={{ p: 2, height: 300 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Verification Distribution</Typography>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n              <PieChart>\r\n                <Pie\r\n                  data={verificationData}\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  labelLine={false}\r\n                  outerRadius={80}\r\n                  fill=\"#8884d8\"\r\n                  dataKey=\"value\"\r\n                  label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n                >\r\n                  {verificationData.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  // Render upload timeline\r\n  const renderUploadTimeline = () => {\r\n    if (!uploadTimeline) return <Typography>No upload timeline data available</Typography>;\r\n\r\n    // Prepare data for timeline\r\n    const timelineData = uploadTimeline.timeline.map(item => ({\r\n      period: item.period,\r\n      total: item.count,\r\n      real: item.real_count,\r\n      fake: item.fake_count\r\n    }));\r\n\r\n    // Prepare data for cumulative timeline\r\n    const cumulativeData = uploadTimeline.cumulative.map(item => ({\r\n      period: item.period,\r\n      total: item.cumulative_count,\r\n      real: item.cumulative_real,\r\n      fake: item.cumulative_fake\r\n    }));\r\n\r\n    return (\r\n      <Grid container spacing={3}>\r\n        {/* Upload Timeline */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2, height: 400 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Upload Timeline ({uploadTimeline.grouping})</Typography>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n              <BarChart data={timelineData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"period\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"real\" stackId=\"a\" fill=\"#00C49F\" name=\"Real Images\" />\r\n                <Bar dataKey=\"fake\" stackId=\"a\" fill=\"#FF8042\" name=\"Fake Images\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Cumulative Timeline */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2, height: 400 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Cumulative Upload Timeline</Typography>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n              <LineChart data={cumulativeData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"period\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"total\" stroke=\"#8884d8\" name=\"Total Images\" />\r\n                <Line type=\"monotone\" dataKey=\"real\" stroke=\"#00C49F\" name=\"Real Images\" />\r\n                <Line type=\"monotone\" dataKey=\"fake\" stroke=\"#FF8042\" name=\"Fake Images\" />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  // Render user activity (admin only)\r\n  const renderUserActivity = () => {\r\n    if (!user.isAdmin) return <Typography>Admin access required</Typography>;\r\n    if (!userActivity) return <Typography>No user activity data available</Typography>;\r\n\r\n    // Prepare data for user image counts\r\n    const userData = userActivity.users.map(user => ({\r\n      username: user.username,\r\n      imageCount: user.image_count,\r\n      realCount: user.real_count,\r\n      fakeCount: user.fake_count,\r\n      verifiedCount: user.verified_count\r\n    })).slice(0, 10); // Limit to top 10 users\r\n\r\n    // Prepare data for registration timeline\r\n    const registrationData = userActivity.registration_timeline.map(item => ({\r\n      date: item.date,\r\n      count: item.count\r\n    }));\r\n\r\n    return (\r\n      <Grid container spacing={3}>\r\n        {/* Statistics */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2 }}>\r\n            <Typography variant=\"h6\" gutterBottom>User Statistics</Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"subtitle1\">Total Users</Typography>\r\n                <Typography variant=\"h4\">{userActivity.statistics.total_users}</Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"subtitle1\">Active Users</Typography>\r\n                <Typography variant=\"h4\">{userActivity.statistics.active_users}</Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"subtitle1\">Total Images</Typography>\r\n                <Typography variant=\"h4\">{userActivity.statistics.total_images}</Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"subtitle1\">Images per User</Typography>\r\n                <Typography variant=\"h4\">{userActivity.statistics.images_per_user.toFixed(1)}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* User Image Counts */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2, height: 400 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Top 10 Users by Image Count</Typography>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n              <BarChart data={userData} layout=\"vertical\">\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis type=\"number\" />\r\n                <YAxis dataKey=\"username\" type=\"category\" width={100} />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"realCount\" stackId=\"a\" fill=\"#00C49F\" name=\"Real Images\" />\r\n                <Bar dataKey=\"fakeCount\" stackId=\"a\" fill=\"#FF8042\" name=\"Fake Images\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Registration Timeline */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2, height: 300 }}>\r\n            <Typography variant=\"h6\" gutterBottom>User Registration Timeline</Typography>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n              <AreaChart data={registrationData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Area type=\"monotone\" dataKey=\"count\" fill=\"#8884d8\" stroke=\"#8884d8\" name=\"New Users\" />\r\n              </AreaChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  // Render verification stats\r\n  const renderVerificationStats = () => {\r\n    if (!verificationStats) return <Typography>No verification stats available</Typography>;\r\n\r\n    // Prepare data for verification distribution\r\n    const verificationData = [\r\n      { name: 'Verified', value: verificationStats.verified_images },\r\n      { name: 'Unverified', value: verificationStats.unverified_images }\r\n    ];\r\n\r\n    // Prepare data for verification by label\r\n    const labelVerificationData = [\r\n      { \r\n        name: 'Real', \r\n        verified: verificationStats.by_label.real.verified, \r\n        unverified: verificationStats.by_label.real.unverified \r\n      },\r\n      { \r\n        name: 'Fake', \r\n        verified: verificationStats.by_label.fake.verified, \r\n        unverified: verificationStats.by_label.fake.unverified \r\n      }\r\n    ];\r\n\r\n    // Prepare data for verification by confidence\r\n    const confidenceVerificationData = Object.entries(verificationStats.by_confidence).map(([range, data]) => ({\r\n      range,\r\n      verified: data.verified,\r\n      unverified: data.unverified\r\n    }));\r\n\r\n    return (\r\n      <Grid container spacing={3}>\r\n        {/* Statistics */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Verification Statistics</Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"subtitle1\">Total Images</Typography>\r\n                <Typography variant=\"h4\">{verificationStats.total_images}</Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"subtitle1\">Verified Images</Typography>\r\n                <Typography variant=\"h4\">{verificationStats.verified_images}</Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"subtitle1\">Unverified Images</Typography>\r\n                <Typography variant=\"h4\">{verificationStats.unverified_images}</Typography>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"subtitle1\">Verification Rate</Typography>\r\n                <Typography variant=\"h4\">{(verificationStats.verification_rate * 100).toFixed(1)}%</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Verification Distribution */}\r\n        <Grid item xs={12} md={6}>\r\n          <Paper sx={{ p: 2, height: 300 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Verification Distribution</Typography>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n              <PieChart>\r\n                <Pie\r\n                  data={verificationData}\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  labelLine={false}\r\n                  outerRadius={80}\r\n                  fill=\"#8884d8\"\r\n                  dataKey=\"value\"\r\n                  label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n                >\r\n                  {verificationData.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Verification by Label */}\r\n        <Grid item xs={12} md={6}>\r\n          <Paper sx={{ p: 2, height: 300 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Verification by Label</Typography>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n              <BarChart data={labelVerificationData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"verified\" fill=\"#00C49F\" name=\"Verified\" />\r\n                <Bar dataKey=\"unverified\" fill=\"#FF8042\" name=\"Unverified\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Verification by Confidence */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2, height: 300 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Verification by Confidence Range</Typography>\r\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\r\n              <BarChart data={confidenceVerificationData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"range\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"verified\" fill=\"#00C49F\" name=\"Verified\" />\r\n                <Bar dataKey=\"unverified\" fill=\"#FF8042\" name=\"Unverified\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom>Image Analytics Dashboard</Typography>\r\n      \r\n      {/* Filters */}\r\n      <Paper sx={{ p: 2, mb: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>Filters</Typography>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12} md={3}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                label=\"Start Date\"\r\n                value={startDate}\r\n                onChange={(newValue) => setStartDate(newValue)}\r\n                renderInput={(params) => <TextField {...params} fullWidth />}\r\n              />\r\n            </LocalizationProvider>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                label=\"End Date\"\r\n                value={endDate}\r\n                onChange={(newValue) => setEndDate(newValue)}\r\n                renderInput={(params) => <TextField {...params} fullWidth />}\r\n              />\r\n            </LocalizationProvider>\r\n          </Grid>\r\n          {activeTab === 2 && (\r\n            <Grid item xs={12} md={2}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Time Grouping</InputLabel>\r\n                <Select\r\n                  value={timeGrouping}\r\n                  label=\"Time Grouping\"\r\n                  onChange={(e) => setTimeGrouping(e.target.value)}\r\n                >\r\n                  <MenuItem value=\"day\">Day</MenuItem>\r\n                  <MenuItem value=\"week\">Week</MenuItem>\r\n                  <MenuItem value=\"month\">Month</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          )}\r\n          <Grid item xs={12} md={2}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={applyFilters} fullWidth>\r\n              Apply Filters\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} md={2}>\r\n            <Button variant=\"outlined\" onClick={resetFilters} fullWidth>\r\n              Reset Filters\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      \r\n      {/* Tabs */}\r\n      <Paper sx={{ mb: 3 }}>\r\n        <Tabs\r\n          value={activeTab}\r\n          onChange={handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n        >\r\n          <Tab label=\"Summary\" />\r\n          <Tab label=\"Deepfake Distribution\" />\r\n          <Tab label=\"Upload Timeline\" />\r\n          {user.isAdmin && <Tab label=\"User Activity\" />}\r\n          <Tab label=\"Verification Stats\" />\r\n        </Tabs>\r\n      </Paper>\r\n      \r\n      {/* Content */}\r\n      <Box sx={{ mt: 3 }}>\r\n        {loading ? (\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\r\n            <CircularProgress />\r\n          </Box>\r\n        ) : error ? (\r\n          <Typography color=\"error\">{error}</Typography>\r\n        ) : (\r\n          <>\r\n            {activeTab === 0 && renderSummary()}\r\n            {activeTab === 1 && renderDeepfakeDistribution()}\r\n            {activeTab === 2 && renderUploadTimeline()}\r\n            {activeTab === 3 && renderUserActivity()}\r\n            {activeTab === 4 && renderVerificationStats()}\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}