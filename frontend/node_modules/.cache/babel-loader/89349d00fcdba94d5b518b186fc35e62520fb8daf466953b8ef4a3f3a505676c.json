{"ast":null,"code":"import { normalizeIpfsHash } from '../util/ipfs';\nimport api from './index';\n\n/**\r\n * Get the URL for an image by its ID\r\n * @param {number} imageId - The ID of the image\r\n * @returns {string} - The URL to access the image\r\n */\nexport const getImageUrl = imageId => {\n  return `${api.defaults.baseURL}/api/images/${imageId}/file/`;\n};\n\n/**\r\n * Upload an image to the server\r\n * @param {File} imageFile - The image file to upload\r\n * @returns {Promise} - API response with the uploaded image data\r\n */\nexport const uploadImage = imageFile => {\n  const formData = new FormData();\n  formData.append('file', imageFile);\n  return api.post('/api/images/upload/', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\n\n/**\r\n * Admin: Get all images from all users\r\n * @returns {Promise} - API response with all images\r\n */\nexport const getAllImages = () => {\n  return api.get('/api/images/admin/images/');\n};\n\n/**\r\n * Admin: Delete an image\r\n * @param {number} imageId - The ID of the image to delete\r\n * @returns {Promise} - API response confirming deletion\r\n */\nexport const deleteImage = imageId => {\n  return api.delete(`/api/images/admin/images/${imageId}/`);\n};\n\n/**\r\n * Get the current user's images with pagination\r\n * @param {Object} params - Pagination parameters\r\n * @param {number} params.page - The page number to fetch\r\n * @param {number} params.page_size - Number of items per page\r\n * @returns {Promise} - API response with paginated images\r\n */\nexport const getMyImages = (params = {\n  page: 1,\n  page_size: 9\n}) => {\n  return api.get('/api/images/my-images/', {\n    params\n  });\n};","map":{"version":3,"names":["normalizeIpfsHash","api","getImageUrl","imageId","defaults","baseURL","uploadImage","imageFile","formData","FormData","append","post","headers","getAllImages","get","deleteImage","delete","getMyImages","params","page","page_size"],"sources":["C:/Users/Erwachens/Desktop/MyProject/frontend/src/api/images.js"],"sourcesContent":["import { normalizeIpfsHash } from '../util/ipfs';\r\nimport api from './index';\r\n\r\n/**\r\n * Get the URL for an image by its ID\r\n * @param {number} imageId - The ID of the image\r\n * @returns {string} - The URL to access the image\r\n */\r\nexport const getImageUrl = (imageId) => {\r\n  return `${api.defaults.baseURL}/api/images/${imageId}/file/`;\r\n};\r\n\r\n/**\r\n * Upload an image to the server\r\n * @param {File} imageFile - The image file to upload\r\n * @returns {Promise} - API response with the uploaded image data\r\n */\r\nexport const uploadImage = (imageFile) => {\r\n  const formData = new FormData();\r\n  formData.append('file', imageFile);\r\n  return api.post('/api/images/upload/', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Admin: Get all images from all users\r\n * @returns {Promise} - API response with all images\r\n */\r\nexport const getAllImages = () => {\r\n  return api.get('/api/images/admin/images/');\r\n};\r\n\r\n/**\r\n * Admin: Delete an image\r\n * @param {number} imageId - The ID of the image to delete\r\n * @returns {Promise} - API response confirming deletion\r\n */\r\nexport const deleteImage = (imageId) => {\r\n  return api.delete(`/api/images/admin/images/${imageId}/`);\r\n};\r\n\r\n/**\r\n * Get the current user's images with pagination\r\n * @param {Object} params - Pagination parameters\r\n * @param {number} params.page - The page number to fetch\r\n * @param {number} params.page_size - Number of items per page\r\n * @returns {Promise} - API response with paginated images\r\n */\r\nexport const getMyImages = (params = { page: 1, page_size: 9 }) => {\r\n  return api.get('/api/images/my-images/', { params });\r\n};\r\n\r\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,cAAc;AAChD,OAAOC,GAAG,MAAM,SAAS;;AAEzB;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAIC,OAAO,IAAK;EACtC,OAAO,GAAGF,GAAG,CAACG,QAAQ,CAACC,OAAO,eAAeF,OAAO,QAAQ;AAC9D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,WAAW,GAAIC,SAAS,IAAK;EACxC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,SAAS,CAAC;EAClC,OAAON,GAAG,CAACU,IAAI,CAAC,qBAAqB,EAAEH,QAAQ,EAAE;IAC/CI,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;;AAMD;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAOZ,GAAG,CAACa,GAAG,CAAC,2BAA2B,CAAC;AAC7C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAIZ,OAAO,IAAK;EACtC,OAAOF,GAAG,CAACe,MAAM,CAAC,4BAA4Bb,OAAO,GAAG,CAAC;AAC3D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMc,WAAW,GAAGA,CAACC,MAAM,GAAG;EAAEC,IAAI,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAE,CAAC,KAAK;EACjE,OAAOnB,GAAG,CAACa,GAAG,CAAC,wBAAwB,EAAE;IAAEI;EAAO,CAAC,CAAC;AACtD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}