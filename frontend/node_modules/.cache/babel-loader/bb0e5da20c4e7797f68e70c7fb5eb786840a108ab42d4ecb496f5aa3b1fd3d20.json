{"ast":null,"code":"var _jsxFileName = \"F:\\\\MyProject\\\\frontend\\\\src\\\\pages\\\\ImageUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useImages } from '../context/ImageContext';\nimport Navbar from '../components/common/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  var _uploadedImageData$or, _uploadedImageData$si;\n  const {\n    uploadImage\n  } = useImages();\n  const [files, setFiles] = useState([]);\n  const [previews, setPreviews] = useState([]);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [verificationStep, setVerificationStep] = useState(0);\n  const [verificationProgress, setVerificationProgress] = useState(0);\n  const [similarImage, setSimilarImage] = useState(null);\n  const [uploadedImageData, setUploadedImageData] = useState(null);\n  const navigate = useNavigate();\n\n  // Verification steps\n  const steps = ['SHA256 check', 'ORB match', 'SIFT match', 'Deepfake check', 'blockchain storage'];\n\n  // Simulate progress during upload\n  useEffect(() => {\n    let interval;\n    if (loading && verificationProgress < 95) {\n      interval = setInterval(() => {\n        setVerificationProgress(prevProgress => {\n          // Move through steps based on progress\n          if (prevProgress < 20) setVerificationStep(0);else if (prevProgress < 40) setVerificationStep(1);else if (prevProgress < 60) setVerificationStep(2);else if (prevProgress < 80) setVerificationStep(3);else setVerificationStep(4);\n          return Math.min(prevProgress + 1, 95);\n        });\n      }, 100);\n    }\n    return () => clearInterval(interval);\n  }, [loading, verificationProgress]);\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files);\n    if (selectedFiles.length === 0) {\n      setFiles([]);\n      setPreviews([]);\n      return;\n    }\n\n    // Check if files are images\n    const nonImageFiles = selectedFiles.filter(file => !file.type.startsWith('image/'));\n    if (nonImageFiles.length > 0) {\n      setError('Please select only image files');\n      return;\n    }\n    setFiles(selectedFiles);\n    setError('');\n    setSimilarImage(null);\n    setVerificationStep(0);\n    setVerificationProgress(0);\n\n    // Create previews\n    const newPreviews = [];\n    selectedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        newPreviews.push(reader.result);\n        if (newPreviews.length === selectedFiles.length) {\n          setPreviews(newPreviews);\n        }\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (files.length === 0) {\n      setError('Please select at least one image to upload');\n      return;\n    }\n    setLoading(true);\n    setVerificationProgress(0);\n    setSimilarImage(null);\n    try {\n      const response = await uploadImage(files[0]);\n      setUploadedImageData(response.data); // Store uploaded image data\n\n      // Set success message and complete loading state\n      setSuccess('Image uploaded successfully!');\n      setLoading(false);\n\n      // Show the uploaded image for a moment before navigating\n      setTimeout(() => {\n        navigate('/upload');\n      }, 1500);\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data;\n      console.error('Upload error:', err);\n      setLoading(false);\n      setVerificationProgress(0);\n\n      // Handle similarity error\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) === 'Similar image found' || ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) === 'Exact duplicate image found') {\n        const errorData = err.response.data;\n        setSimilarImage({\n          id: errorData.image_id,\n          similarity: errorData.similarity,\n          stage: errorData.stage,\n          message: errorData.message,\n          type: errorData.duplicate_type\n        });\n\n        // Set active step based on which stage detected the similarity\n        if (errorData.stage === 'sha256') setVerificationStep(0);else if (errorData.stage === 'orb') setVerificationStep(1);else if (errorData.stage === 'sift') setVerificationStep(2);\n        setError(`Upload failed: ${errorData.message || 'Similar image found'}`);\n      } else {\n        var _err$response3, _err$response3$data;\n        setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Failed to upload image(s)');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"image\",\n              className: \"form-control\",\n              accept: \"image/*\",\n              onChange: handleFileChange,\n              disabled: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            disabled: files.length === 0 || loading,\n            children: loading ? 'Uploading...' : 'Upload Image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), uploadedImageData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-image-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Uploaded Image Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"SHA256: \", uploadedImageData.sha256_hash]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Deepfake: \", uploadedImageData.deepfake_label, \" (\", Math.round(uploadedImageData.deepfake_confidence * 100), \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ORB Similarity: \", (_uploadedImageData$or = uploadedImageData.orb_features) === null || _uploadedImageData$or === void 0 ? void 0 : _uploadedImageData$or.similarity_score, \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"SIFT Similarity: \", (_uploadedImageData$si = uploadedImageData.sift_features) === null || _uploadedImageData$si === void 0 ? void 0 : _uploadedImageData$si.similarity_score, \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"53KM65tsEhVX0c++RsKo3vLZOXs=\", false, function () {\n  return [useImages, useNavigate];\n});\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useImages","Navbar","jsxDEV","_jsxDEV","ImageUpload","_s","_uploadedImageData$or","_uploadedImageData$si","uploadImage","files","setFiles","previews","setPreviews","error","setError","success","setSuccess","loading","setLoading","verificationStep","setVerificationStep","verificationProgress","setVerificationProgress","similarImage","setSimilarImage","uploadedImageData","setUploadedImageData","navigate","steps","interval","setInterval","prevProgress","Math","min","clearInterval","handleFileChange","e","selectedFiles","Array","from","target","length","nonImageFiles","filter","file","type","startsWith","newPreviews","forEach","reader","FileReader","onloadend","push","result","readAsDataURL","handleSubmit","preventDefault","response","data","setTimeout","err","_err$response","_err$response$data","_err$response2","_err$response2$data","console","errorData","id","image_id","similarity","stage","message","duplicate_type","_err$response3","_err$response3$data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","accept","onChange","disabled","sha256_hash","deepfake_label","round","deepfake_confidence","orb_features","similarity_score","sift_features","_c","$RefreshReg$"],"sources":["F:/MyProject/frontend/src/pages/ImageUpload.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useImages } from '../context/ImageContext';\r\nimport Navbar from '../components/common/Navbar';\r\n\r\nconst ImageUpload = () => {\r\n  const { uploadImage } = useImages();\r\n  const [files, setFiles] = useState([]);\r\n  const [previews, setPreviews] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const [verificationStep, setVerificationStep] = useState(0);\r\n  const [verificationProgress, setVerificationProgress] = useState(0);\r\n  const [similarImage, setSimilarImage] = useState(null);\r\n  const [uploadedImageData, setUploadedImageData] = useState(null);\r\n \r\n  const navigate = useNavigate();\r\n\r\n  // Verification steps\r\n  const steps = [\r\n    'SHA256 check',\r\n    'ORB match',\r\n    'SIFT match',\r\n    'Deepfake check',\r\n    'blockchain storage'\r\n  ];\r\n\r\n  // Simulate progress during upload\r\n  useEffect(() => {\r\n    let interval;\r\n    if (loading && verificationProgress < 95) {\r\n      interval = setInterval(() => {\r\n        setVerificationProgress((prevProgress) => {\r\n          // Move through steps based on progress\r\n          if (prevProgress < 20) setVerificationStep(0);\r\n          else if (prevProgress < 40) setVerificationStep(1);\r\n          else if (prevProgress < 60) setVerificationStep(2);\r\n          else if (prevProgress < 80) setVerificationStep(3);\r\n          else setVerificationStep(4);\r\n          \r\n          return Math.min(prevProgress + 1, 95);\r\n        });\r\n      }, 100);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [loading, verificationProgress]);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    \r\n    if (selectedFiles.length === 0) {\r\n      setFiles([]);\r\n      setPreviews([]);\r\n      return;\r\n    }\r\n    \r\n    // Check if files are images\r\n    const nonImageFiles = selectedFiles.filter(file => !file.type.startsWith('image/'));\r\n    if (nonImageFiles.length > 0) {\r\n      setError('Please select only image files');\r\n      return;\r\n    }\r\n    \r\n    setFiles(selectedFiles);\r\n    setError('');\r\n    setSimilarImage(null);\r\n    setVerificationStep(0);\r\n    setVerificationProgress(0);\r\n    \r\n    // Create previews\r\n    const newPreviews = [];\r\n    selectedFiles.forEach(file => {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        newPreviews.push(reader.result);\r\n        if (newPreviews.length === selectedFiles.length) {\r\n          setPreviews(newPreviews);\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (files.length === 0) {\r\n      setError('Please select at least one image to upload');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setVerificationProgress(0);\r\n    setSimilarImage(null);\r\n    \r\n    try {\r\n      const response = await uploadImage(files[0]);\r\n      setUploadedImageData(response.data); // Store uploaded image data\r\n      \r\n      // Set success message and complete loading state\r\n      setSuccess('Image uploaded successfully!');\r\n      setLoading(false);\r\n      \r\n      // Show the uploaded image for a moment before navigating\r\n      setTimeout(() => {\r\n        navigate('/upload');\r\n      }, 1500);\r\n    } catch (err) {\r\n      console.error('Upload error:', err);\r\n      setLoading(false);\r\n      setVerificationProgress(0);\r\n      \r\n      // Handle similarity error\r\n      if (err.response?.data?.error === 'Similar image found' || \r\n          err.response?.data?.error === 'Exact duplicate image found') {\r\n        \r\n        const errorData = err.response.data;\r\n        setSimilarImage({\r\n          id: errorData.image_id,\r\n          similarity: errorData.similarity,\r\n          stage: errorData.stage,\r\n          message: errorData.message,\r\n          type: errorData.duplicate_type\r\n        });\r\n        \r\n        // Set active step based on which stage detected the similarity\r\n        if (errorData.stage === 'sha256') setVerificationStep(0);\r\n        else if (errorData.stage === 'orb') setVerificationStep(1);\r\n        else if (errorData.stage === 'sift') setVerificationStep(2);\r\n        \r\n        setError(`Upload failed: ${errorData.message || 'Similar image found'}`);\r\n      } else {\r\n        setError(err.response?.data?.error || 'Failed to upload image(s)');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      \r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <h3>Upload Image</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"file\"\r\n                id=\"image\"\r\n                className=\"form-control\"\r\n                accept=\"image/*\"\r\n                onChange={handleFileChange}\r\n                disabled={loading}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn\" disabled={files.length === 0 || loading}>\r\n              {loading ? 'Uploading...' : 'Upload Image'}\r\n            </button>\r\n          </form>\r\n          \r\n          {success && <div className=\"alert alert-success\">{success}</div>}\r\n          {error && <div className=\"alert alert-danger\">{error}</div>}\r\n          \r\n          {uploadedImageData && (\r\n            <div className=\"uploaded-image-info\">\r\n              <h4>Uploaded Image Details</h4>\r\n              <p>SHA256: {uploadedImageData.sha256_hash}</p>\r\n              <p>Deepfake: {uploadedImageData.deepfake_label} ({Math.round(uploadedImageData.deepfake_confidence * 100)}%)</p>\r\n              <p>ORB Similarity: {uploadedImageData.orb_features?.similarity_score} %</p>\r\n              <p>SIFT Similarity: {uploadedImageData.sift_features?.similarity_score} %</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}